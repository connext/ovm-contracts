export declare enum ErrorCode {
    API_ERROR = "API_ERROR",
    BAD_AUTHENTICATION = "BAD_AUTHENTICATION",
    BAD_CREDS = "BAD_CREDENTIALS",
    BAD_JSON = "BAD_JSON",
    BAD_MSG = "BAD_MSG",
    BAD_NKEY_SEED = "BAD_NKEY_CREDENTIALS",
    BAD_REPLY = "BAD_REPLY",
    BAD_SUBJECT = "BAD_SUBJECT",
    CLIENT_CERT_REQ = "CLIENT_CERT_REQ",
    CONN_CLOSED = "CONN_CLOSED",
    CONN_DRAINING = "CONN_DRAINING",
    CONN_ERR = "CONN_ERR",
    CONN_TIMEOUT = "CONN_TIMEOUT",
    INVALID_ENCODING = "INVALID_ENCODING",
    NKEY_OR_JWT_REQ = "NKEY_OR_JWT_REQ",
    NONCE_SIGNER_NOTFUNC = "NONCE_SIGNER_NOT_FUNC",
    NON_SECURE_CONN_REQ = "NON_SECURE_CONN_REQ",
    NO_ECHO_NOT_SUPPORTED = "NO_ECHO_NOT_SUPPORTED",
    NO_SEED_IN_CREDS = "NO_SEED_IN_CREDS",
    NO_USER_JWT_IN_CREDS = "NO_USER_JWT_IN_CREDS",
    REQ_TIMEOUT = "REQ_TIMEOUT",
    SECURE_CONN_REQ = "SECURE_CONN_REQ",
    SIGNATURE_REQUIRED = "SIG_REQ",
    SSL_ERR = "SSL_ERR",
    STALE_CONNECTION_ERR = "STALE CONNECTION",
    SUB_CLOSED = "SUB_CLOSED",
    SUB_DRAINING = "SUB_DRAINING",
    SUB_TIMEOUT = "SUB_TIMEOUT",
    UNABLE_TO_CONNECT = "UNABLE_TO_CONNECT",
    AUTHORIZATION_VIOLATION = "AUTHORIZATION_VIOLATION",
    NATS_PROTOCOL_ERR = "NATS_PROTOCOL_ERR",
    PERMISSIONS_VIOLATION = "PERMISSIONS_VIOLATION"
}
export declare const REQ_TIMEOUT_MSG_PREFIX = "The request timed out for subscription id: ";
export declare const INVALID_ENCODING_MSG_PREFIX = "Invalid Encoding:";
export declare const CONN_ERR_PREFIX = "Could not connect to server: ";
export declare class Messages {
    static messages: Messages;
    messages: {
        [key: string]: string;
    };
    private constructor();
    static getMessage(s: string): string;
    getMessage(s: string): string;
}
export declare class NatsError implements Error {
    name: string;
    message: string;
    code: string;
    chainedError?: Error;
    /**
     * @param {String} message
     * @param {String} code
     * @param {Error} [chainedError]
     * @constructor
     *
     * @api private
     */
    constructor(message: string, code: string, chainedError?: Error);
    static errorForCode(code: string, chainedError?: Error): NatsError;
}
