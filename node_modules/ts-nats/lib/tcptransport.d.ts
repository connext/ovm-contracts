/// <reference types="node" />
import * as net from 'net';
import { TLSSocket } from 'tls';
import { Transport, TransportHandlers } from './transport';
import { UrlObject } from 'url';
/**
 * @hidden
 */
export declare class TCPTransport implements Transport {
    connectedOnce: boolean;
    stream: net.Socket | TLSSocket | null;
    handlers: TransportHandlers;
    closed: boolean;
    dialTime: number;
    constructor(handlers: TransportHandlers);
    connect(url: UrlObject, timeout?: number): Promise<any>;
    isClosed(): boolean;
    isConnected(): boolean;
    isEncrypted(): boolean;
    isAuthorized(): boolean;
    upgrade(tlsOptions: any, done: Function): void;
    write(data: Buffer | string): void;
    destroy(): void;
    close(): void;
    pause(): void;
    resume(): void;
    dialDuration(): number;
}
