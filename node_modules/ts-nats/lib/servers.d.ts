/// <reference types="node" />
import * as url from 'url';
import { ServerInfo, ServersChangedEvent } from './nats';
/**
 * @hidden
 */
export declare class Server {
    url: url.Url;
    didConnect: boolean;
    reconnects: number;
    lastConnect: number;
    implicit: boolean;
    constructor(u: string, implicit?: boolean);
    toString(): string;
    getCredentials(): string[] | undefined;
}
/**
 * @hidden
 */
export declare class Servers {
    private firstSelect;
    private readonly servers;
    private currentServer;
    constructor(randomize: boolean, urls: string[], firstServer?: string);
    getCurrentServer(): Server;
    addServer(u: string, implicit?: boolean): void;
    selectServer(): Server | undefined;
    removeCurrentServer(): void;
    removeServer(server: Server | undefined): void;
    length(): number;
    next(): Server | undefined;
    getServers(): Server[];
    processServerUpdate(info: ServerInfo): ServersChangedEvent;
}
