"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _antlr = _interopRequireDefault(require("antlr4"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

// This class defines a complete listener for a parse tree produced by SolidityParser.
var SolidityListener = /*#__PURE__*/function (_antlr4$tree$ParseTre) {
  _inherits(SolidityListener, _antlr4$tree$ParseTre);

  var _super = _createSuper(SolidityListener);

  function SolidityListener() {
    _classCallCheck(this, SolidityListener);

    return _super.apply(this, arguments);
  }

  _createClass(SolidityListener, [{
    key: "enterSourceUnit",
    // Enter a parse tree produced by SolidityParser#sourceUnit.
    value: function enterSourceUnit(ctx) {} // Exit a parse tree produced by SolidityParser#sourceUnit.

  }, {
    key: "exitSourceUnit",
    value: function exitSourceUnit(ctx) {} // Enter a parse tree produced by SolidityParser#pragmaDirective.

  }, {
    key: "enterPragmaDirective",
    value: function enterPragmaDirective(ctx) {} // Exit a parse tree produced by SolidityParser#pragmaDirective.

  }, {
    key: "exitPragmaDirective",
    value: function exitPragmaDirective(ctx) {} // Enter a parse tree produced by SolidityParser#pragmaName.

  }, {
    key: "enterPragmaName",
    value: function enterPragmaName(ctx) {} // Exit a parse tree produced by SolidityParser#pragmaName.

  }, {
    key: "exitPragmaName",
    value: function exitPragmaName(ctx) {} // Enter a parse tree produced by SolidityParser#pragmaValue.

  }, {
    key: "enterPragmaValue",
    value: function enterPragmaValue(ctx) {} // Exit a parse tree produced by SolidityParser#pragmaValue.

  }, {
    key: "exitPragmaValue",
    value: function exitPragmaValue(ctx) {} // Enter a parse tree produced by SolidityParser#version.

  }, {
    key: "enterVersion",
    value: function enterVersion(ctx) {} // Exit a parse tree produced by SolidityParser#version.

  }, {
    key: "exitVersion",
    value: function exitVersion(ctx) {} // Enter a parse tree produced by SolidityParser#versionOperator.

  }, {
    key: "enterVersionOperator",
    value: function enterVersionOperator(ctx) {} // Exit a parse tree produced by SolidityParser#versionOperator.

  }, {
    key: "exitVersionOperator",
    value: function exitVersionOperator(ctx) {} // Enter a parse tree produced by SolidityParser#versionConstraint.

  }, {
    key: "enterVersionConstraint",
    value: function enterVersionConstraint(ctx) {} // Exit a parse tree produced by SolidityParser#versionConstraint.

  }, {
    key: "exitVersionConstraint",
    value: function exitVersionConstraint(ctx) {} // Enter a parse tree produced by SolidityParser#importDeclaration.

  }, {
    key: "enterImportDeclaration",
    value: function enterImportDeclaration(ctx) {} // Exit a parse tree produced by SolidityParser#importDeclaration.

  }, {
    key: "exitImportDeclaration",
    value: function exitImportDeclaration(ctx) {} // Enter a parse tree produced by SolidityParser#importDirective.

  }, {
    key: "enterImportDirective",
    value: function enterImportDirective(ctx) {} // Exit a parse tree produced by SolidityParser#importDirective.

  }, {
    key: "exitImportDirective",
    value: function exitImportDirective(ctx) {} // Enter a parse tree produced by SolidityParser#contractDefinition.

  }, {
    key: "enterContractDefinition",
    value: function enterContractDefinition(ctx) {} // Exit a parse tree produced by SolidityParser#contractDefinition.

  }, {
    key: "exitContractDefinition",
    value: function exitContractDefinition(ctx) {} // Enter a parse tree produced by SolidityParser#inheritanceSpecifier.

  }, {
    key: "enterInheritanceSpecifier",
    value: function enterInheritanceSpecifier(ctx) {} // Exit a parse tree produced by SolidityParser#inheritanceSpecifier.

  }, {
    key: "exitInheritanceSpecifier",
    value: function exitInheritanceSpecifier(ctx) {} // Enter a parse tree produced by SolidityParser#contractPart.

  }, {
    key: "enterContractPart",
    value: function enterContractPart(ctx) {} // Exit a parse tree produced by SolidityParser#contractPart.

  }, {
    key: "exitContractPart",
    value: function exitContractPart(ctx) {} // Enter a parse tree produced by SolidityParser#stateVariableDeclaration.

  }, {
    key: "enterStateVariableDeclaration",
    value: function enterStateVariableDeclaration(ctx) {} // Exit a parse tree produced by SolidityParser#stateVariableDeclaration.

  }, {
    key: "exitStateVariableDeclaration",
    value: function exitStateVariableDeclaration(ctx) {} // Enter a parse tree produced by SolidityParser#fileLevelConstant.

  }, {
    key: "enterFileLevelConstant",
    value: function enterFileLevelConstant(ctx) {} // Exit a parse tree produced by SolidityParser#fileLevelConstant.

  }, {
    key: "exitFileLevelConstant",
    value: function exitFileLevelConstant(ctx) {} // Enter a parse tree produced by SolidityParser#usingForDeclaration.

  }, {
    key: "enterUsingForDeclaration",
    value: function enterUsingForDeclaration(ctx) {} // Exit a parse tree produced by SolidityParser#usingForDeclaration.

  }, {
    key: "exitUsingForDeclaration",
    value: function exitUsingForDeclaration(ctx) {} // Enter a parse tree produced by SolidityParser#structDefinition.

  }, {
    key: "enterStructDefinition",
    value: function enterStructDefinition(ctx) {} // Exit a parse tree produced by SolidityParser#structDefinition.

  }, {
    key: "exitStructDefinition",
    value: function exitStructDefinition(ctx) {} // Enter a parse tree produced by SolidityParser#modifierDefinition.

  }, {
    key: "enterModifierDefinition",
    value: function enterModifierDefinition(ctx) {} // Exit a parse tree produced by SolidityParser#modifierDefinition.

  }, {
    key: "exitModifierDefinition",
    value: function exitModifierDefinition(ctx) {} // Enter a parse tree produced by SolidityParser#modifierInvocation.

  }, {
    key: "enterModifierInvocation",
    value: function enterModifierInvocation(ctx) {} // Exit a parse tree produced by SolidityParser#modifierInvocation.

  }, {
    key: "exitModifierInvocation",
    value: function exitModifierInvocation(ctx) {} // Enter a parse tree produced by SolidityParser#functionDefinition.

  }, {
    key: "enterFunctionDefinition",
    value: function enterFunctionDefinition(ctx) {} // Exit a parse tree produced by SolidityParser#functionDefinition.

  }, {
    key: "exitFunctionDefinition",
    value: function exitFunctionDefinition(ctx) {} // Enter a parse tree produced by SolidityParser#functionDescriptor.

  }, {
    key: "enterFunctionDescriptor",
    value: function enterFunctionDescriptor(ctx) {} // Exit a parse tree produced by SolidityParser#functionDescriptor.

  }, {
    key: "exitFunctionDescriptor",
    value: function exitFunctionDescriptor(ctx) {} // Enter a parse tree produced by SolidityParser#returnParameters.

  }, {
    key: "enterReturnParameters",
    value: function enterReturnParameters(ctx) {} // Exit a parse tree produced by SolidityParser#returnParameters.

  }, {
    key: "exitReturnParameters",
    value: function exitReturnParameters(ctx) {} // Enter a parse tree produced by SolidityParser#modifierList.

  }, {
    key: "enterModifierList",
    value: function enterModifierList(ctx) {} // Exit a parse tree produced by SolidityParser#modifierList.

  }, {
    key: "exitModifierList",
    value: function exitModifierList(ctx) {} // Enter a parse tree produced by SolidityParser#eventDefinition.

  }, {
    key: "enterEventDefinition",
    value: function enterEventDefinition(ctx) {} // Exit a parse tree produced by SolidityParser#eventDefinition.

  }, {
    key: "exitEventDefinition",
    value: function exitEventDefinition(ctx) {} // Enter a parse tree produced by SolidityParser#enumValue.

  }, {
    key: "enterEnumValue",
    value: function enterEnumValue(ctx) {} // Exit a parse tree produced by SolidityParser#enumValue.

  }, {
    key: "exitEnumValue",
    value: function exitEnumValue(ctx) {} // Enter a parse tree produced by SolidityParser#enumDefinition.

  }, {
    key: "enterEnumDefinition",
    value: function enterEnumDefinition(ctx) {} // Exit a parse tree produced by SolidityParser#enumDefinition.

  }, {
    key: "exitEnumDefinition",
    value: function exitEnumDefinition(ctx) {} // Enter a parse tree produced by SolidityParser#parameterList.

  }, {
    key: "enterParameterList",
    value: function enterParameterList(ctx) {} // Exit a parse tree produced by SolidityParser#parameterList.

  }, {
    key: "exitParameterList",
    value: function exitParameterList(ctx) {} // Enter a parse tree produced by SolidityParser#parameter.

  }, {
    key: "enterParameter",
    value: function enterParameter(ctx) {} // Exit a parse tree produced by SolidityParser#parameter.

  }, {
    key: "exitParameter",
    value: function exitParameter(ctx) {} // Enter a parse tree produced by SolidityParser#eventParameterList.

  }, {
    key: "enterEventParameterList",
    value: function enterEventParameterList(ctx) {} // Exit a parse tree produced by SolidityParser#eventParameterList.

  }, {
    key: "exitEventParameterList",
    value: function exitEventParameterList(ctx) {} // Enter a parse tree produced by SolidityParser#eventParameter.

  }, {
    key: "enterEventParameter",
    value: function enterEventParameter(ctx) {} // Exit a parse tree produced by SolidityParser#eventParameter.

  }, {
    key: "exitEventParameter",
    value: function exitEventParameter(ctx) {} // Enter a parse tree produced by SolidityParser#functionTypeParameterList.

  }, {
    key: "enterFunctionTypeParameterList",
    value: function enterFunctionTypeParameterList(ctx) {} // Exit a parse tree produced by SolidityParser#functionTypeParameterList.

  }, {
    key: "exitFunctionTypeParameterList",
    value: function exitFunctionTypeParameterList(ctx) {} // Enter a parse tree produced by SolidityParser#functionTypeParameter.

  }, {
    key: "enterFunctionTypeParameter",
    value: function enterFunctionTypeParameter(ctx) {} // Exit a parse tree produced by SolidityParser#functionTypeParameter.

  }, {
    key: "exitFunctionTypeParameter",
    value: function exitFunctionTypeParameter(ctx) {} // Enter a parse tree produced by SolidityParser#variableDeclaration.

  }, {
    key: "enterVariableDeclaration",
    value: function enterVariableDeclaration(ctx) {} // Exit a parse tree produced by SolidityParser#variableDeclaration.

  }, {
    key: "exitVariableDeclaration",
    value: function exitVariableDeclaration(ctx) {} // Enter a parse tree produced by SolidityParser#typeName.

  }, {
    key: "enterTypeName",
    value: function enterTypeName(ctx) {} // Exit a parse tree produced by SolidityParser#typeName.

  }, {
    key: "exitTypeName",
    value: function exitTypeName(ctx) {} // Enter a parse tree produced by SolidityParser#userDefinedTypeName.

  }, {
    key: "enterUserDefinedTypeName",
    value: function enterUserDefinedTypeName(ctx) {} // Exit a parse tree produced by SolidityParser#userDefinedTypeName.

  }, {
    key: "exitUserDefinedTypeName",
    value: function exitUserDefinedTypeName(ctx) {} // Enter a parse tree produced by SolidityParser#mappingKey.

  }, {
    key: "enterMappingKey",
    value: function enterMappingKey(ctx) {} // Exit a parse tree produced by SolidityParser#mappingKey.

  }, {
    key: "exitMappingKey",
    value: function exitMappingKey(ctx) {} // Enter a parse tree produced by SolidityParser#mapping.

  }, {
    key: "enterMapping",
    value: function enterMapping(ctx) {} // Exit a parse tree produced by SolidityParser#mapping.

  }, {
    key: "exitMapping",
    value: function exitMapping(ctx) {} // Enter a parse tree produced by SolidityParser#functionTypeName.

  }, {
    key: "enterFunctionTypeName",
    value: function enterFunctionTypeName(ctx) {} // Exit a parse tree produced by SolidityParser#functionTypeName.

  }, {
    key: "exitFunctionTypeName",
    value: function exitFunctionTypeName(ctx) {} // Enter a parse tree produced by SolidityParser#storageLocation.

  }, {
    key: "enterStorageLocation",
    value: function enterStorageLocation(ctx) {} // Exit a parse tree produced by SolidityParser#storageLocation.

  }, {
    key: "exitStorageLocation",
    value: function exitStorageLocation(ctx) {} // Enter a parse tree produced by SolidityParser#stateMutability.

  }, {
    key: "enterStateMutability",
    value: function enterStateMutability(ctx) {} // Exit a parse tree produced by SolidityParser#stateMutability.

  }, {
    key: "exitStateMutability",
    value: function exitStateMutability(ctx) {} // Enter a parse tree produced by SolidityParser#block.

  }, {
    key: "enterBlock",
    value: function enterBlock(ctx) {} // Exit a parse tree produced by SolidityParser#block.

  }, {
    key: "exitBlock",
    value: function exitBlock(ctx) {} // Enter a parse tree produced by SolidityParser#statement.

  }, {
    key: "enterStatement",
    value: function enterStatement(ctx) {} // Exit a parse tree produced by SolidityParser#statement.

  }, {
    key: "exitStatement",
    value: function exitStatement(ctx) {} // Enter a parse tree produced by SolidityParser#expressionStatement.

  }, {
    key: "enterExpressionStatement",
    value: function enterExpressionStatement(ctx) {} // Exit a parse tree produced by SolidityParser#expressionStatement.

  }, {
    key: "exitExpressionStatement",
    value: function exitExpressionStatement(ctx) {} // Enter a parse tree produced by SolidityParser#ifStatement.

  }, {
    key: "enterIfStatement",
    value: function enterIfStatement(ctx) {} // Exit a parse tree produced by SolidityParser#ifStatement.

  }, {
    key: "exitIfStatement",
    value: function exitIfStatement(ctx) {} // Enter a parse tree produced by SolidityParser#tryStatement.

  }, {
    key: "enterTryStatement",
    value: function enterTryStatement(ctx) {} // Exit a parse tree produced by SolidityParser#tryStatement.

  }, {
    key: "exitTryStatement",
    value: function exitTryStatement(ctx) {} // Enter a parse tree produced by SolidityParser#catchClause.

  }, {
    key: "enterCatchClause",
    value: function enterCatchClause(ctx) {} // Exit a parse tree produced by SolidityParser#catchClause.

  }, {
    key: "exitCatchClause",
    value: function exitCatchClause(ctx) {} // Enter a parse tree produced by SolidityParser#whileStatement.

  }, {
    key: "enterWhileStatement",
    value: function enterWhileStatement(ctx) {} // Exit a parse tree produced by SolidityParser#whileStatement.

  }, {
    key: "exitWhileStatement",
    value: function exitWhileStatement(ctx) {} // Enter a parse tree produced by SolidityParser#simpleStatement.

  }, {
    key: "enterSimpleStatement",
    value: function enterSimpleStatement(ctx) {} // Exit a parse tree produced by SolidityParser#simpleStatement.

  }, {
    key: "exitSimpleStatement",
    value: function exitSimpleStatement(ctx) {} // Enter a parse tree produced by SolidityParser#forStatement.

  }, {
    key: "enterForStatement",
    value: function enterForStatement(ctx) {} // Exit a parse tree produced by SolidityParser#forStatement.

  }, {
    key: "exitForStatement",
    value: function exitForStatement(ctx) {} // Enter a parse tree produced by SolidityParser#inlineAssemblyStatement.

  }, {
    key: "enterInlineAssemblyStatement",
    value: function enterInlineAssemblyStatement(ctx) {} // Exit a parse tree produced by SolidityParser#inlineAssemblyStatement.

  }, {
    key: "exitInlineAssemblyStatement",
    value: function exitInlineAssemblyStatement(ctx) {} // Enter a parse tree produced by SolidityParser#doWhileStatement.

  }, {
    key: "enterDoWhileStatement",
    value: function enterDoWhileStatement(ctx) {} // Exit a parse tree produced by SolidityParser#doWhileStatement.

  }, {
    key: "exitDoWhileStatement",
    value: function exitDoWhileStatement(ctx) {} // Enter a parse tree produced by SolidityParser#continueStatement.

  }, {
    key: "enterContinueStatement",
    value: function enterContinueStatement(ctx) {} // Exit a parse tree produced by SolidityParser#continueStatement.

  }, {
    key: "exitContinueStatement",
    value: function exitContinueStatement(ctx) {} // Enter a parse tree produced by SolidityParser#breakStatement.

  }, {
    key: "enterBreakStatement",
    value: function enterBreakStatement(ctx) {} // Exit a parse tree produced by SolidityParser#breakStatement.

  }, {
    key: "exitBreakStatement",
    value: function exitBreakStatement(ctx) {} // Enter a parse tree produced by SolidityParser#returnStatement.

  }, {
    key: "enterReturnStatement",
    value: function enterReturnStatement(ctx) {} // Exit a parse tree produced by SolidityParser#returnStatement.

  }, {
    key: "exitReturnStatement",
    value: function exitReturnStatement(ctx) {} // Enter a parse tree produced by SolidityParser#throwStatement.

  }, {
    key: "enterThrowStatement",
    value: function enterThrowStatement(ctx) {} // Exit a parse tree produced by SolidityParser#throwStatement.

  }, {
    key: "exitThrowStatement",
    value: function exitThrowStatement(ctx) {} // Enter a parse tree produced by SolidityParser#emitStatement.

  }, {
    key: "enterEmitStatement",
    value: function enterEmitStatement(ctx) {} // Exit a parse tree produced by SolidityParser#emitStatement.

  }, {
    key: "exitEmitStatement",
    value: function exitEmitStatement(ctx) {} // Enter a parse tree produced by SolidityParser#variableDeclarationStatement.

  }, {
    key: "enterVariableDeclarationStatement",
    value: function enterVariableDeclarationStatement(ctx) {} // Exit a parse tree produced by SolidityParser#variableDeclarationStatement.

  }, {
    key: "exitVariableDeclarationStatement",
    value: function exitVariableDeclarationStatement(ctx) {} // Enter a parse tree produced by SolidityParser#variableDeclarationList.

  }, {
    key: "enterVariableDeclarationList",
    value: function enterVariableDeclarationList(ctx) {} // Exit a parse tree produced by SolidityParser#variableDeclarationList.

  }, {
    key: "exitVariableDeclarationList",
    value: function exitVariableDeclarationList(ctx) {} // Enter a parse tree produced by SolidityParser#identifierList.

  }, {
    key: "enterIdentifierList",
    value: function enterIdentifierList(ctx) {} // Exit a parse tree produced by SolidityParser#identifierList.

  }, {
    key: "exitIdentifierList",
    value: function exitIdentifierList(ctx) {} // Enter a parse tree produced by SolidityParser#elementaryTypeName.

  }, {
    key: "enterElementaryTypeName",
    value: function enterElementaryTypeName(ctx) {} // Exit a parse tree produced by SolidityParser#elementaryTypeName.

  }, {
    key: "exitElementaryTypeName",
    value: function exitElementaryTypeName(ctx) {} // Enter a parse tree produced by SolidityParser#expression.

  }, {
    key: "enterExpression",
    value: function enterExpression(ctx) {} // Exit a parse tree produced by SolidityParser#expression.

  }, {
    key: "exitExpression",
    value: function exitExpression(ctx) {} // Enter a parse tree produced by SolidityParser#primaryExpression.

  }, {
    key: "enterPrimaryExpression",
    value: function enterPrimaryExpression(ctx) {} // Exit a parse tree produced by SolidityParser#primaryExpression.

  }, {
    key: "exitPrimaryExpression",
    value: function exitPrimaryExpression(ctx) {} // Enter a parse tree produced by SolidityParser#expressionList.

  }, {
    key: "enterExpressionList",
    value: function enterExpressionList(ctx) {} // Exit a parse tree produced by SolidityParser#expressionList.

  }, {
    key: "exitExpressionList",
    value: function exitExpressionList(ctx) {} // Enter a parse tree produced by SolidityParser#nameValueList.

  }, {
    key: "enterNameValueList",
    value: function enterNameValueList(ctx) {} // Exit a parse tree produced by SolidityParser#nameValueList.

  }, {
    key: "exitNameValueList",
    value: function exitNameValueList(ctx) {} // Enter a parse tree produced by SolidityParser#nameValue.

  }, {
    key: "enterNameValue",
    value: function enterNameValue(ctx) {} // Exit a parse tree produced by SolidityParser#nameValue.

  }, {
    key: "exitNameValue",
    value: function exitNameValue(ctx) {} // Enter a parse tree produced by SolidityParser#functionCallArguments.

  }, {
    key: "enterFunctionCallArguments",
    value: function enterFunctionCallArguments(ctx) {} // Exit a parse tree produced by SolidityParser#functionCallArguments.

  }, {
    key: "exitFunctionCallArguments",
    value: function exitFunctionCallArguments(ctx) {} // Enter a parse tree produced by SolidityParser#functionCall.

  }, {
    key: "enterFunctionCall",
    value: function enterFunctionCall(ctx) {} // Exit a parse tree produced by SolidityParser#functionCall.

  }, {
    key: "exitFunctionCall",
    value: function exitFunctionCall(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyBlock.

  }, {
    key: "enterAssemblyBlock",
    value: function enterAssemblyBlock(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyBlock.

  }, {
    key: "exitAssemblyBlock",
    value: function exitAssemblyBlock(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyItem.

  }, {
    key: "enterAssemblyItem",
    value: function enterAssemblyItem(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyItem.

  }, {
    key: "exitAssemblyItem",
    value: function exitAssemblyItem(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyExpression.

  }, {
    key: "enterAssemblyExpression",
    value: function enterAssemblyExpression(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyExpression.

  }, {
    key: "exitAssemblyExpression",
    value: function exitAssemblyExpression(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyMember.

  }, {
    key: "enterAssemblyMember",
    value: function enterAssemblyMember(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyMember.

  }, {
    key: "exitAssemblyMember",
    value: function exitAssemblyMember(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyCall.

  }, {
    key: "enterAssemblyCall",
    value: function enterAssemblyCall(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyCall.

  }, {
    key: "exitAssemblyCall",
    value: function exitAssemblyCall(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyLocalDefinition.

  }, {
    key: "enterAssemblyLocalDefinition",
    value: function enterAssemblyLocalDefinition(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyLocalDefinition.

  }, {
    key: "exitAssemblyLocalDefinition",
    value: function exitAssemblyLocalDefinition(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyAssignment.

  }, {
    key: "enterAssemblyAssignment",
    value: function enterAssemblyAssignment(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyAssignment.

  }, {
    key: "exitAssemblyAssignment",
    value: function exitAssemblyAssignment(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyIdentifierOrList.

  }, {
    key: "enterAssemblyIdentifierOrList",
    value: function enterAssemblyIdentifierOrList(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyIdentifierOrList.

  }, {
    key: "exitAssemblyIdentifierOrList",
    value: function exitAssemblyIdentifierOrList(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyIdentifierList.

  }, {
    key: "enterAssemblyIdentifierList",
    value: function enterAssemblyIdentifierList(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyIdentifierList.

  }, {
    key: "exitAssemblyIdentifierList",
    value: function exitAssemblyIdentifierList(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyStackAssignment.

  }, {
    key: "enterAssemblyStackAssignment",
    value: function enterAssemblyStackAssignment(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyStackAssignment.

  }, {
    key: "exitAssemblyStackAssignment",
    value: function exitAssemblyStackAssignment(ctx) {} // Enter a parse tree produced by SolidityParser#labelDefinition.

  }, {
    key: "enterLabelDefinition",
    value: function enterLabelDefinition(ctx) {} // Exit a parse tree produced by SolidityParser#labelDefinition.

  }, {
    key: "exitLabelDefinition",
    value: function exitLabelDefinition(ctx) {} // Enter a parse tree produced by SolidityParser#assemblySwitch.

  }, {
    key: "enterAssemblySwitch",
    value: function enterAssemblySwitch(ctx) {} // Exit a parse tree produced by SolidityParser#assemblySwitch.

  }, {
    key: "exitAssemblySwitch",
    value: function exitAssemblySwitch(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyCase.

  }, {
    key: "enterAssemblyCase",
    value: function enterAssemblyCase(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyCase.

  }, {
    key: "exitAssemblyCase",
    value: function exitAssemblyCase(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyFunctionDefinition.

  }, {
    key: "enterAssemblyFunctionDefinition",
    value: function enterAssemblyFunctionDefinition(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyFunctionDefinition.

  }, {
    key: "exitAssemblyFunctionDefinition",
    value: function exitAssemblyFunctionDefinition(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyFunctionReturns.

  }, {
    key: "enterAssemblyFunctionReturns",
    value: function enterAssemblyFunctionReturns(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyFunctionReturns.

  }, {
    key: "exitAssemblyFunctionReturns",
    value: function exitAssemblyFunctionReturns(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyFor.

  }, {
    key: "enterAssemblyFor",
    value: function enterAssemblyFor(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyFor.

  }, {
    key: "exitAssemblyFor",
    value: function exitAssemblyFor(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyIf.

  }, {
    key: "enterAssemblyIf",
    value: function enterAssemblyIf(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyIf.

  }, {
    key: "exitAssemblyIf",
    value: function exitAssemblyIf(ctx) {} // Enter a parse tree produced by SolidityParser#assemblyLiteral.

  }, {
    key: "enterAssemblyLiteral",
    value: function enterAssemblyLiteral(ctx) {} // Exit a parse tree produced by SolidityParser#assemblyLiteral.

  }, {
    key: "exitAssemblyLiteral",
    value: function exitAssemblyLiteral(ctx) {} // Enter a parse tree produced by SolidityParser#subAssembly.

  }, {
    key: "enterSubAssembly",
    value: function enterSubAssembly(ctx) {} // Exit a parse tree produced by SolidityParser#subAssembly.

  }, {
    key: "exitSubAssembly",
    value: function exitSubAssembly(ctx) {} // Enter a parse tree produced by SolidityParser#tupleExpression.

  }, {
    key: "enterTupleExpression",
    value: function enterTupleExpression(ctx) {} // Exit a parse tree produced by SolidityParser#tupleExpression.

  }, {
    key: "exitTupleExpression",
    value: function exitTupleExpression(ctx) {} // Enter a parse tree produced by SolidityParser#typeNameExpression.

  }, {
    key: "enterTypeNameExpression",
    value: function enterTypeNameExpression(ctx) {} // Exit a parse tree produced by SolidityParser#typeNameExpression.

  }, {
    key: "exitTypeNameExpression",
    value: function exitTypeNameExpression(ctx) {} // Enter a parse tree produced by SolidityParser#numberLiteral.

  }, {
    key: "enterNumberLiteral",
    value: function enterNumberLiteral(ctx) {} // Exit a parse tree produced by SolidityParser#numberLiteral.

  }, {
    key: "exitNumberLiteral",
    value: function exitNumberLiteral(ctx) {} // Enter a parse tree produced by SolidityParser#identifier.

  }, {
    key: "enterIdentifier",
    value: function enterIdentifier(ctx) {} // Exit a parse tree produced by SolidityParser#identifier.

  }, {
    key: "exitIdentifier",
    value: function exitIdentifier(ctx) {} // Enter a parse tree produced by SolidityParser#hexLiteral.

  }, {
    key: "enterHexLiteral",
    value: function enterHexLiteral(ctx) {} // Exit a parse tree produced by SolidityParser#hexLiteral.

  }, {
    key: "exitHexLiteral",
    value: function exitHexLiteral(ctx) {} // Enter a parse tree produced by SolidityParser#overrideSpecifier.

  }, {
    key: "enterOverrideSpecifier",
    value: function enterOverrideSpecifier(ctx) {} // Exit a parse tree produced by SolidityParser#overrideSpecifier.

  }, {
    key: "exitOverrideSpecifier",
    value: function exitOverrideSpecifier(ctx) {} // Enter a parse tree produced by SolidityParser#stringLiteral.

  }, {
    key: "enterStringLiteral",
    value: function enterStringLiteral(ctx) {} // Exit a parse tree produced by SolidityParser#stringLiteral.

  }, {
    key: "exitStringLiteral",
    value: function exitStringLiteral(ctx) {}
  }]);

  return SolidityListener;
}(_antlr["default"].tree.ParseTreeListener);

exports["default"] = SolidityListener;