"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createlockHash = exports.hashCoreTransferState = exports.hashTransferState = exports.encodeCoreTransferState = exports.encodeTransferResolver = exports.decodeTransferResolver = exports.encodeBalance = exports.encodeTransferState = exports.getTransferId = void 0;
const vector_types_1 = require("@connext/vector-types");
const abi_1 = require("@ethersproject/abi");
const solidity_1 = require("@ethersproject/solidity");
exports.getTransferId = (channelAddress, channelNonce, transferDefinition, transferTimeout) => solidity_1.keccak256(["address", "address", "uint256", "uint256"], [transferDefinition, channelAddress, transferTimeout, channelNonce]);
exports.encodeTransferState = (state, encoding) => abi_1.defaultAbiCoder.encode([encoding], [state]);
exports.encodeBalance = (balance) => abi_1.defaultAbiCoder.encode([vector_types_1.BalanceEncoding], [balance]);
exports.decodeTransferResolver = (encoded, encoding) => abi_1.defaultAbiCoder.decode([encoding], encoded)[0];
exports.encodeTransferResolver = (resolver, encoding) => abi_1.defaultAbiCoder.encode([encoding], [resolver]);
exports.encodeCoreTransferState = (state) => abi_1.defaultAbiCoder.encode([vector_types_1.CoreTransferStateEncoding], [state]);
exports.hashTransferState = (state, encoding) => solidity_1.keccak256(["bytes"], [exports.encodeTransferState(state, encoding)]);
exports.hashCoreTransferState = (state) => solidity_1.keccak256(["bytes"], [exports.encodeCoreTransferState(state)]);
exports.createlockHash = (preImage) => solidity_1.sha256(["bytes32"], [preImage]);
//# sourceMappingURL=transfers.js.map