{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/Ctx.js","lib/Evt.asNonPostable.js","lib/Evt.asPostable.js","lib/Evt.asyncPipe.js","lib/Evt.create.js","lib/Evt.factorize.js","lib/Evt.from.js","lib/Evt.getCtx.js","lib/Evt.js","lib/Evt.loosenType.js","lib/Evt.merge.js","lib/Evt.newCtx.js","lib/Evt.parsePropsFromArgs.js","lib/Evt.useEffect.js","lib/LazyEvt.js","lib/LazyStatefulEvt.js","lib/StatefulEvt.js","lib/importProxy.js","lib/index.js","lib/types/EventTargetLike.js","lib/types/EvtError.js","lib/types/Operator.js","lib/types/helper/index.js","lib/types/index.js","lib/types/interfaces/CtxLike.js","lib/types/interfaces/index.js","lib/types/lib.dom.js","lib/util/compose.js","lib/util/encapsulateOpState.js","lib/util/genericOperators/index.js","lib/util/genericOperators/throttleTime.js","lib/util/genericOperators/to.js","lib/util/index.js","lib/util/invokeOperator.js","tools/Deferred.js","tools/safeSetTimeout.js","tools/typeSafety/assert.js","tools/typeSafety/defineAccessors.js","tools/typeSafety/exclude.js","tools/typeSafety/id.js","tools/typeSafety/index.js","tools/typeSafety/isPromiseLike.js","tools/typeSafety/matchVoid.js","tools/typeSafety/objectKeys.js","tools/typeSafety/overwriteReadonlyProp.js","tools/typeSafety/typeGuard.js","node_modules/minimal-polyfills/Array.prototype.find.js","node_modules/minimal-polyfills/Map.js","node_modules/minimal-polyfills/Object.is.js","node_modules/minimal-polyfills/Set.js","node_modules/minimal-polyfills/WeakMap.js","node_modules/run-exclusive/lib/runExclusive.js"],"names":[],"mappingsjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACptnFA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChfile":"generated.js","sourceRoot":"","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nexports.__esModule = true;\nexports.Ctx = void 0;\nvar Set_1 = require(\"minimal-polyfills/Set\");\nvar WeakMap_1 = require(\"minimal-polyfills/WeakMap\");\nvar assert_1 = require(\"../tools/typeSafety/assert\");\nvar typeGuard_1 = require(\"../tools/typeSafety/typeGuard\");\nvar LazyEvt_1 = require(\"./LazyEvt\");\nvar importProxy_1 = require(\"./importProxy\");\nvar defineAccessors_1 = require(\"../tools/typeSafety/defineAccessors\");\nvar overwriteReadonlyProp_1 = require(\"../tools/typeSafety/overwriteReadonlyProp\");\nvar CtxImpl = /** @class */ (function () {\n    function CtxImpl() {\n        this.lazyEvtAttach = new LazyEvt_1.LazyEvt();\n        this.lazyEvtDetach = new LazyEvt_1.LazyEvt();\n        this.lazyEvtDoneOrAborted = new LazyEvt_1.LazyEvt();\n        this.handlers = new Set_1.Polyfill();\n        this.evtByHandler = new WeakMap_1.Polyfill();\n    }\n    CtxImpl.prototype.onDoneOrAborted = function (doneEvtData) {\n        this.lazyEvtDoneOrAborted.post(doneEvtData);\n    };\n    CtxImpl.prototype.waitFor = function (timeout) {\n        var _this_1 = this;\n        return this.evtDoneOrAborted\n            .waitFor(timeout)\n            .then(function (data) {\n            if (data.type === \"ABORTED\") {\n                throw data.error;\n            }\n            return data.result;\n        }, function (timeoutError) {\n            _this_1.abort(timeoutError);\n            throw timeoutError;\n        });\n    };\n    CtxImpl.prototype.abort = function (error) {\n        return this.__done(error);\n    };\n    CtxImpl.prototype.done = function (result) {\n        return this.__done(undefined, result);\n    };\n    /** Detach all handler bound to this context from theirs respective Evt and post getEvtDone() */\n    CtxImpl.prototype.__done = function (error, result) {\n        var e_1, _a;\n        var handlers = [];\n        try {\n            for (var _b = __values(this.handlers.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var handler = _c.value;\n                var evt = this.evtByHandler.get(handler);\n                var wasStillAttached = handler.detach();\n                //NOTE: It should not be possible\n                if (!wasStillAttached) {\n                    continue;\n                }\n                handlers.push({ handler: handler, evt: evt });\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        this.onDoneOrAborted(__assign(__assign({}, (!!error ?\n            { type: \"ABORTED\", error: error } :\n            { type: \"DONE\", \"result\": result })), { handlers: handlers }));\n        return handlers;\n    };\n    CtxImpl.prototype.getHandlers = function () {\n        var _this_1 = this;\n        return Array.from(this.handlers.values())\n            .map(function (handler) { return ({ handler: handler, \"evt\": _this_1.evtByHandler.get(handler) }); });\n    };\n    CtxImpl.prototype.zz__addHandler = function (handler, evt) {\n        assert_1.assert(handler.ctx === this);\n        assert_1.assert(typeGuard_1.typeGuard(handler));\n        this.handlers.add(handler);\n        this.evtByHandler.set(handler, evt);\n        this.lazyEvtAttach.post({ handler: handler, evt: evt });\n    };\n    CtxImpl.prototype.zz__removeHandler = function (handler) {\n        assert_1.assert(handler.ctx === this);\n        assert_1.assert(typeGuard_1.typeGuard(handler));\n        this.lazyEvtDetach.post({\n            handler: handler,\n            \"evt\": this.evtByHandler.get(handler)\n        });\n        this.handlers[\"delete\"](handler);\n    };\n    CtxImpl.__1 = (function () {\n        if (false) {\n            CtxImpl.__1;\n        }\n        defineAccessors_1.defineAccessors(CtxImpl.prototype, \"evtDoneOrAborted\", {\n            \"get\": function () {\n                return this.lazyEvtDoneOrAborted.evt;\n            }\n        });\n        defineAccessors_1.defineAccessors(CtxImpl.prototype, \"evtAttach\", {\n            \"get\": function () {\n                return this.lazyEvtAttach.evt;\n            }\n        });\n        defineAccessors_1.defineAccessors(CtxImpl.prototype, \"evtDetach\", {\n            \"get\": function () {\n                return this.lazyEvtDetach.evt;\n            }\n        });\n    })();\n    return CtxImpl;\n}());\nexports.Ctx = CtxImpl;\ntry {\n    overwriteReadonlyProp_1.overwriteReadonlyProp(exports.Ctx, \"name\", \"Ctx\");\n}\ncatch (_a) { }\nimportProxy_1.importProxy.Ctx = exports.Ctx;\n//# sourceMappingURL=Ctx.js.map","\"use strict\";\nexports.__esModule = true;\nexports.asNonPostable = void 0;\n/** https://docs.evt.land/api/evt/asnonpostable */\nfunction asNonPostable(evt) {\n    return evt;\n}\nexports.asNonPostable = asNonPostable;\n//# sourceMappingURL=Evt.asNonPostable.js.map","\"use strict\";\nexports.__esModule = true;\nexports.asPostable = void 0;\n/**\n * https://docs.evt.land/api/evt/aspostable\n * ⚠ UNSAFE ⚠ - Please refer to documentation before using.\n * */\nfunction asPostable(evt) {\n    return evt;\n}\nexports.asPostable = asPostable;\n//# sourceMappingURL=Evt.asPostable.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nexports.asyncPipe = void 0;\nvar Evt_2 = require(\"./Evt\");\n/**\n * Will be deprecated in next release once async operators lands.\n * Example of use: https://stackblitz.com/edit/evt-async-op?file=index.ts\n */\nfunction asyncPipe(evt, asyncOp) {\n    var _this_1 = this;\n    var out = new Evt_2.Evt();\n    evt.attach(function (data) { return __awaiter(_this_1, void 0, void 0, function () {\n        var opResult;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, asyncOp(data)];\n                case 1:\n                    opResult = _a.sent();\n                    if (opResult === null) {\n                        return [2 /*return*/];\n                    }\n                    out.post(opResult[0]);\n                    return [2 /*return*/];\n            }\n        });\n    }); });\n    return out;\n}\nexports.asyncPipe = asyncPipe;\n//# sourceMappingURL=Evt.asyncPipe.js.map","\"use strict\";\nexports.__esModule = true;\nexports.create = void 0;\nvar importProxy_1 = require(\"./importProxy\");\nfunction create() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.length === 0 ?\n        new importProxy_1.importProxy.Evt() :\n        new importProxy_1.importProxy.StatefulEvt(args[0]);\n}\nexports.create = create;\n//# sourceMappingURL=Evt.create.js.map","\"use strict\";\nexports.__esModule = true;\nexports.factorize = void 0;\n/** https://docs.evt.land/api/evt/factorize */\nfunction factorize(evt) {\n    return evt;\n}\nexports.factorize = factorize;\n/*\nimport { Evt } from \"./Evt\";\nconst x: Evt<boolean> = loosenType(new Evt<true>()); x;\nconst y: Evt<boolean> = loosenType(new Evt<number>()); y;\n*/ \n//# sourceMappingURL=Evt.factorize.js.map","\"use strict\";\nexports.__esModule = true;\nexports.from = void 0;\nvar id_1 = require(\"../tools/typeSafety/id\");\nvar assert_1 = require(\"../tools/typeSafety/assert\");\nvar typeGuard_1 = require(\"../tools/typeSafety/typeGuard\");\nvar EventTargetLike_1 = require(\"./types/EventTargetLike\");\nvar Evt_merge_1 = require(\"./Evt.merge\");\nvar importProxy_1 = require(\"./importProxy\");\nfunction fromImpl(ctx, target, eventName, options) {\n    var matchEventTargetLike = function (target_) {\n        return EventTargetLike_1.EventTargetLike.canBe(target_);\n    };\n    if (!matchEventTargetLike(target)) {\n        if (\"then\" in target) {\n            var evt_1 = new importProxy_1.importProxy.Evt();\n            var isCtxDone_1 = (function () {\n                var getEvtDonePostCount = function () { return ctx === null || ctx === void 0 ? void 0 : ctx.evtDoneOrAborted.postCount; };\n                var n = getEvtDonePostCount();\n                return function () { return n !== getEvtDonePostCount(); };\n            })();\n            target.then(function (data) {\n                if (isCtxDone_1()) {\n                    return;\n                }\n                evt_1.post(data);\n            });\n            return evt_1;\n        }\n        return Evt_merge_1.mergeImpl(ctx, Array.from(target).map(function (target) { return fromImpl(ctx, target, eventName, options); }));\n    }\n    var proxy;\n    if (EventTargetLike_1.EventTargetLike.NodeStyleEventEmitter.match(target)) {\n        proxy = {\n            \"on\": function (listener, eventName) { return target.addListener(eventName, listener); },\n            \"off\": function (listener, eventName) { return target.removeListener(eventName, listener); }\n        };\n    }\n    else if (EventTargetLike_1.EventTargetLike.JQueryStyleEventEmitter.match(target)) {\n        proxy = {\n            \"on\": function (listener, eventName) { return target.on(eventName, listener); },\n            \"off\": function (listener, eventName) { return target.off(eventName, listener); }\n        };\n    }\n    else if (EventTargetLike_1.EventTargetLike.HasEventTargetAddRemove.match(target)) {\n        proxy = {\n            \"on\": function (listener, eventName, options) { return target.addEventListener(eventName, listener, options); },\n            \"off\": function (listener, eventName, options) { return target.removeEventListener(eventName, listener, options); }\n        };\n    }\n    else if (EventTargetLike_1.EventTargetLike.RxJSSubject.match(target)) {\n        var subscription_1;\n        proxy = {\n            \"on\": function (listener) { return subscription_1 = target.subscribe(function (data) { return listener(data); }); },\n            \"off\": function () { return subscription_1.unsubscribe(); }\n        };\n    }\n    else {\n        id_1.id(target);\n        assert_1.assert(false);\n    }\n    var evt = new importProxy_1.importProxy.Evt();\n    var listener = function (data) { return evt.post(data); };\n    ctx === null || ctx === void 0 ? void 0 : ctx.evtDoneOrAborted.attachOnce(function () { return proxy.off(listener, eventName, options); });\n    proxy.on(listener, eventName, options);\n    return evt;\n}\nfunction from(ctxOrTarget, targetOrEventName, eventNameOrOptions, options) {\n    if (\"evtDoneOrAborted\" in ctxOrTarget) {\n        assert_1.assert(typeGuard_1.typeGuard(targetOrEventName) &&\n            typeGuard_1.typeGuard(eventNameOrOptions) &&\n            typeGuard_1.typeGuard(options));\n        return fromImpl(ctxOrTarget, targetOrEventName, eventNameOrOptions, options);\n    }\n    else {\n        assert_1.assert(typeGuard_1.typeGuard(targetOrEventName) &&\n            typeGuard_1.typeGuard(eventNameOrOptions));\n        return fromImpl(undefined, ctxOrTarget, targetOrEventName, eventNameOrOptions);\n    }\n}\nexports.from = from;\n//# sourceMappingURL=Evt.from.js.map","\"use strict\";\nexports.__esModule = true;\nexports.getCtxFactory = void 0;\nvar WeakMap_1 = require(\"minimal-polyfills/WeakMap\");\nvar importProxy_1 = require(\"./importProxy\");\n/**\n * https://docs.evt.land/api/evt/getctx\n *\n * Evt.weakCtx(obj) always return the same instance of VoidCtx for a given object.\n * No strong reference to the object is created\n * when the object is no longer referenced it's associated Ctx will be freed from memory.\n */\nfunction getCtxFactory() {\n    var ctxByObj = new WeakMap_1.Polyfill();\n    function getCtx(obj) {\n        var ctx = ctxByObj.get(obj);\n        if (ctx === undefined) {\n            ctx = (new importProxy_1.importProxy.Ctx());\n            ctxByObj.set(obj, ctx);\n        }\n        return ctx;\n    }\n    return getCtx;\n}\nexports.getCtxFactory = getCtxFactory;\n//# sourceMappingURL=Evt.getCtx.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nexports.__esModule = true;\nexports.Evt = void 0;\nrequire(\"minimal-polyfills/Array.prototype.find\");\nvar importProxy_1 = require(\"./importProxy\");\nvar Evt_create_1 = require(\"./Evt.create\");\nvar Evt_getCtx_1 = require(\"./Evt.getCtx\");\nvar Evt_factorize_1 = require(\"./Evt.factorize\");\nvar Evt_merge_1 = require(\"./Evt.merge\");\nvar Evt_from_1 = require(\"./Evt.from\");\nvar Evt_useEffect_1 = require(\"./Evt.useEffect\");\nvar Evt_asPostable_1 = require(\"./Evt.asPostable\");\nvar Evt_asyncPipe_1 = require(\"./Evt.asyncPipe\");\nvar Evt_asNonPostable_1 = require(\"./Evt.asNonPostable\");\nvar Evt_parsePropsFromArgs_1 = require(\"./Evt.parsePropsFromArgs\");\nvar Evt_newCtx_1 = require(\"./Evt.newCtx\");\nvar LazyEvt_1 = require(\"./LazyEvt\");\nvar defineAccessors_1 = require(\"../tools/typeSafety/defineAccessors\");\nvar invokeOperator_1 = require(\"./util/invokeOperator\");\nvar Map_1 = require(\"minimal-polyfills/Map\");\nvar WeakMap_1 = require(\"minimal-polyfills/WeakMap\");\nvar runExclusive = require(\"run-exclusive\");\nvar EvtError_1 = require(\"./types/EvtError\");\nvar overwriteReadonlyProp_1 = require(\"../tools/typeSafety/overwriteReadonlyProp\");\nvar typeGuard_1 = require(\"../tools/typeSafety/typeGuard\");\nvar encapsulateOpState_1 = require(\"./util/encapsulateOpState\");\nvar Deferred_1 = require(\"../tools/Deferred\");\nvar Evt_loosenType_1 = require(\"./Evt.loosenType\");\nvar CtxLike_1 = require(\"./types/interfaces/CtxLike\");\nvar safeSetTimeout_1 = require(\"../tools/safeSetTimeout\");\nvar isPromiseLike_1 = require(\"../tools/typeSafety/isPromiseLike\");\nvar Operator_1 = require(\"./types/Operator\");\nvar EvtImpl = /** @class */ (function () {\n    function EvtImpl() {\n        this.lazyEvtAttach = new LazyEvt_1.LazyEvt();\n        this.lazyEvtDetach = new LazyEvt_1.LazyEvt();\n        this.__maxHandlers = undefined;\n        this.postCount = 0;\n        this.traceId = null;\n        this.handlers = [];\n        this.handlerTriggers = new Map_1.Polyfill();\n        /*\n        NOTE: Used as Date.now() would be used to compare if an event is anterior\n        or posterior to an other. We don't use Date.now() because two call within\n        less than a ms will return the same value unlike this function.\n        */\n        this.__currentChronologyMark = 0;\n        this.asyncHandlerCount = 0;\n    }\n    EvtImpl.setDefaultMaxHandlers = function (n) {\n        this.__defaultMaxHandlers = isFinite(n) ? n : 0;\n    };\n    EvtImpl.prototype.toStateful = function (p1, p2) {\n        var isP1Ctx = CtxLike_1.CtxLike.match(p1);\n        var initialValue = isP1Ctx ? undefined : p1;\n        var ctx = p2 || (isP1Ctx ? p1 : undefined);\n        var out = new importProxy_1.importProxy.StatefulEvt(initialValue);\n        var callback = function (data) { return out.post(data); };\n        if (!!ctx) {\n            this.attach(ctx, callback);\n        }\n        else {\n            this.attach(callback);\n        }\n        return out;\n    };\n    EvtImpl.prototype.setMaxHandlers = function (n) {\n        this.__maxHandlers = isFinite(n) ? n : 0;\n        return this;\n    };\n    EvtImpl.prototype.enableTrace = function (params\n    //NOTE: Not typeof console.log as we don't want to expose types from node\n    ) {\n        var id = params.id, formatter = params.formatter, log = params.log;\n        this.traceId = id;\n        this.traceFormatter = formatter || (function (data) {\n            try {\n                return JSON.stringify(data, null, 2);\n            }\n            catch (_a) {\n                return \"\" + data;\n            }\n        });\n        this.log =\n            log === undefined ?\n                (function () {\n                    var inputs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        inputs[_i] = arguments[_i];\n                    }\n                    return console.log.apply(console, __spread(inputs));\n                }) :\n                log === false ? undefined : log;\n    };\n    EvtImpl.prototype.disableTrace = function () {\n        this.traceId = null;\n        return this;\n    };\n    EvtImpl.prototype.getChronologyMark = function () {\n        return this.__currentChronologyMark++;\n    };\n    EvtImpl.prototype.detachHandler = function (handler, wTimer, rejectPr) {\n        var index = this.handlers.indexOf(handler);\n        if (index < 0) {\n            return false;\n        }\n        if (typeGuard_1.typeGuard(handler, !!handler.ctx)) {\n            handler.ctx.zz__removeHandler(handler);\n        }\n        this.handlers.splice(index, 1);\n        if (handler.async) {\n            this.asyncHandlerCount--;\n        }\n        this.handlerTriggers[\"delete\"](handler);\n        if (wTimer[0] !== undefined) {\n            safeSetTimeout_1.safeClearTimeout(wTimer[0]);\n            rejectPr(new EvtError_1.EvtError.Detached());\n        }\n        this.lazyEvtDetach.post(handler);\n        return true;\n    };\n    EvtImpl.prototype.triggerHandler = function (handler, wTimer, resolvePr, opResult) {\n        var callback = handler.callback, once = handler.once;\n        if (wTimer[0] !== undefined) {\n            safeSetTimeout_1.safeClearTimeout(wTimer[0]);\n            wTimer[0] = undefined;\n        }\n        EvtImpl.doDetachIfNeeded(handler, opResult, once);\n        var _a = __read(opResult, 1), transformedData = _a[0];\n        var prOrValue = callback === null || callback === void 0 ? void 0 : callback.call(this, transformedData);\n        resolvePr === null || resolvePr === void 0 ? void 0 : resolvePr(transformedData);\n        return isPromiseLike_1.isPromiseLike(prOrValue) ? prOrValue : undefined;\n    };\n    EvtImpl.prototype.addHandler = function (propsFromArgs, propsFromMethodName) {\n        var _this_1 = this;\n        if (Operator_1.Operator.fλ.Stateful.match(propsFromArgs.op)) {\n            this.statelessByStatefulOp.set(propsFromArgs.op, encapsulateOpState_1.encapsulateOpState(propsFromArgs.op));\n        }\n        var d = new Deferred_1.Deferred();\n        var wTimer = [undefined];\n        var handler = __assign(__assign(__assign({}, propsFromArgs), propsFromMethodName), { \"detach\": function () { return _this_1.detachHandler(handler, wTimer, d.reject); }, \"promise\": d.pr });\n        if (typeof handler.timeout === \"number\") {\n            wTimer[0] = safeSetTimeout_1.safeSetTimeout(function () {\n                wTimer[0] = undefined;\n                handler.detach();\n                d.reject(new EvtError_1.EvtError.Timeout(handler.timeout));\n            }, handler.timeout);\n        }\n        this.handlerTriggers.set(handler, function (opResult) { return _this_1.triggerHandler(handler, wTimer, d.isPending ? d.resolve : undefined, opResult); });\n        if (handler.async) {\n            this.asyncHandlerChronologyMark.set(handler, this.getChronologyMark());\n        }\n        if (handler.prepend) {\n            var i = void 0;\n            for (i = 0; i < this.handlers.length; i++) {\n                if (this.handlers[i].extract) {\n                    continue;\n                }\n                break;\n            }\n            this.handlers.splice(i, 0, handler);\n        }\n        else {\n            this.handlers.push(handler);\n        }\n        if (handler.async) {\n            this.asyncHandlerCount++;\n        }\n        this.checkForPotentialMemoryLeak();\n        if (typeGuard_1.typeGuard(handler, !!handler.ctx)) {\n            handler.ctx.zz__addHandler(handler, this);\n        }\n        this.lazyEvtAttach.post(handler);\n        return handler;\n    };\n    EvtImpl.prototype.checkForPotentialMemoryLeak = function () {\n        var maxHandlers = this.__maxHandlers !== undefined ?\n            this.__maxHandlers :\n            EvtImpl.__defaultMaxHandlers;\n        if (maxHandlers === 0 ||\n            this.handlers.length % (maxHandlers + 1) !== 0) {\n            return;\n        }\n        var message = [\n            \"MaxHandlersExceededWarning: Possible Evt memory leak detected.\",\n            this.handlers.length + \" handlers attached\" + (this.traceId ? \" to \\\"\" + this.traceId + \"\\\"\" : \"\") + \".\\n\",\n            \"Use Evt.prototype.setMaxHandlers(n) to increase limit on a specific Evt.\\n\",\n            \"Use Evt.setDefaultMaxHandlers(n) to change the default limit currently set to \" + EvtImpl.__defaultMaxHandlers + \".\\n\",\n        ].join(\"\");\n        var map = new Map_1.Polyfill();\n        this.getHandlers()\n            .map(function (_a) {\n            var ctx = _a.ctx, async = _a.async, once = _a.once, prepend = _a.prepend, extract = _a.extract, op = _a.op, callback = _a.callback;\n            return (__assign(__assign({ \"hasCtx\": !!ctx, once: once,\n                prepend: prepend,\n                extract: extract, \"isWaitFor\": async }, (op === Evt_parsePropsFromArgs_1.matchAll ? {} : { \"op\": op.toString() })), (!callback ? {} : { \"callback\": callback.toString() })));\n        })\n            .map(function (obj) {\n            return \"{\\n\" + Object.keys(obj)\n                .map(function (key) { return \"  \" + key + \": \" + obj[key]; })\n                .join(\",\\n\") + \"\\n}\";\n        })\n            .forEach(function (str) { return map.set(str, (map.has(str) ? map.get(str) : 0) + 1); });\n        message += \"\\n\" + Array.from(map.keys())\n            .map(function (str) { return map.get(str) + \" handler\" + (map.get(str) === 1 ? \"\" : \"s\") + \" like:\\n\" + str; })\n            .join(\"\\n\") + \"\\n\";\n        if (this.traceId === null) {\n            message += \"\\n\" + [\n                \"To validate the identify of the Evt instance that is triggering this warning you can call\",\n                \"Evt.prototype.enableTrace({ \\\"id\\\": \\\"My evt id\\\", \\\"log\\\": false }) on the Evt that you suspect.\\n\"\n            ].join(\" \");\n        }\n        try {\n            console.warn(message);\n        }\n        catch (_a) {\n        }\n    };\n    EvtImpl.prototype.getStatelessOp = function (op) {\n        return Operator_1.Operator.fλ.Stateful.match(op) ?\n            this.statelessByStatefulOp.get(op) :\n            op;\n    };\n    EvtImpl.prototype.trace = function (data) {\n        var _this_1 = this;\n        var _a;\n        if (this.traceId === null) {\n            return;\n        }\n        var message = \"(\" + this.traceId + \") \";\n        var isExtracted = !!this.handlers.find(function (_a) {\n            var extract = _a.extract, op = _a.op;\n            return (extract &&\n                !!_this_1.getStatelessOp(op)(data));\n        });\n        if (isExtracted) {\n            message += \"extracted \";\n        }\n        else {\n            var handlerCount = this.handlers\n                .filter(function (_a) {\n                var extract = _a.extract, op = _a.op;\n                return !extract &&\n                    !!_this_1.getStatelessOp(op)(data);\n            })\n                .length;\n            message += handlerCount + \" handler\" + ((handlerCount > 1) ? \"s\" : \"\") + \", \";\n        }\n        (_a = this.log) === null || _a === void 0 ? void 0 : _a.call(this, message + this.traceFormatter(data));\n    };\n    /** Return [ isExtracted, prAllHandlerCallbacksResolved ] */\n    EvtImpl.prototype.postSync = function (data) {\n        var e_1, _a;\n        var prAllHandlerCallbacksResolved = [];\n        var getReturnValue = function (isExtracted) { return [\n            isExtracted,\n            Promise.all(prAllHandlerCallbacksResolved).then(function () { })\n        ]; };\n        try {\n            for (var _b = __values(__spread(this.handlers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var handler = _c.value;\n                var async = handler.async, op = handler.op, extract = handler.extract;\n                if (async) {\n                    continue;\n                }\n                var opResult = invokeOperator_1.invokeOperator(this.getStatelessOp(op), data, true);\n                if (Operator_1.Operator.fλ.Result.NotMatched.match(opResult)) {\n                    EvtImpl.doDetachIfNeeded(handler, opResult);\n                    continue;\n                }\n                var handlerTrigger = this.handlerTriggers.get(handler);\n                //NOTE: Possible if detached while in the loop.\n                if (!handlerTrigger) {\n                    continue;\n                }\n                var prOrUndefined = handlerTrigger(opResult);\n                if (prOrUndefined !== undefined) {\n                    prAllHandlerCallbacksResolved.push(prOrUndefined);\n                }\n                if (extract) {\n                    return getReturnValue(true);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return getReturnValue(false);\n    };\n    EvtImpl.prototype.postAsyncFactory = function () {\n        var _this_1 = this;\n        return runExclusive.buildMethodCb(function (data, postChronologyMark, releaseLock) {\n            var e_2, _a;\n            if (_this_1.asyncHandlerCount === 0) {\n                releaseLock();\n                return;\n            }\n            var promises = [];\n            var chronologyMarkStartResolveTick;\n            //NOTE: Must be before handlerTrigger call.\n            Promise.resolve().then(function () { return chronologyMarkStartResolveTick = _this_1.getChronologyMark(); });\n            var _loop_1 = function (handler) {\n                if (!handler.async) {\n                    return \"continue\";\n                }\n                var opResult = invokeOperator_1.invokeOperator(_this_1.getStatelessOp(handler.op), data, true);\n                if (Operator_1.Operator.fλ.Result.NotMatched.match(opResult)) {\n                    EvtImpl.doDetachIfNeeded(handler, opResult);\n                    return \"continue\";\n                }\n                var handlerTrigger = _this_1.handlerTriggers.get(handler);\n                if (!handlerTrigger) {\n                    return \"continue\";\n                }\n                var shouldCallHandlerTrigger = (function () {\n                    var handlerMark = _this_1.asyncHandlerChronologyMark.get(handler);\n                    if (postChronologyMark > handlerMark) {\n                        return true;\n                    }\n                    var exceptionRange = _this_1.asyncHandlerChronologyExceptionRange.get(handler);\n                    return (exceptionRange !== undefined &&\n                        exceptionRange.lowerMark < postChronologyMark &&\n                        postChronologyMark < exceptionRange.upperMark &&\n                        handlerMark > exceptionRange.upperMark);\n                })();\n                if (!shouldCallHandlerTrigger) {\n                    return \"continue\";\n                }\n                promises.push(new Promise(function (resolve) { return handler.promise\n                    .then(function () { return resolve(); })[\"catch\"](function () { return resolve(); }); }));\n                handlerTrigger(opResult);\n            };\n            try {\n                for (var _b = __values(__spread(_this_1.handlers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var handler = _c.value;\n                    _loop_1(handler);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            if (promises.length === 0) {\n                releaseLock();\n                return;\n            }\n            var handlersDump = __spread(_this_1.handlers);\n            Promise.all(promises).then(function () {\n                var e_3, _a;\n                try {\n                    for (var _b = __values(_this_1.handlers), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var handler = _c.value;\n                        if (!handler.async) {\n                            continue;\n                        }\n                        if (handlersDump.indexOf(handler) >= 0) {\n                            continue;\n                        }\n                        _this_1.asyncHandlerChronologyExceptionRange.set(handler, {\n                            \"lowerMark\": postChronologyMark,\n                            \"upperMark\": chronologyMarkStartResolveTick\n                        });\n                    }\n                }\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n                    }\n                    finally { if (e_3) throw e_3.error; }\n                }\n                releaseLock();\n            });\n        });\n    };\n    EvtImpl.prototype.isHandled = function (data) {\n        var _this_1 = this;\n        return !!this.getHandlers()\n            .find(function (_a) {\n            var op = _a.op;\n            return !!_this_1.getStatelessOp(op)(data);\n        });\n    };\n    EvtImpl.prototype.getHandlers = function () {\n        return __spread(this.handlers);\n    };\n    EvtImpl.prototype.detach = function (ctx) {\n        var e_4, _a;\n        var detachedHandlers = [];\n        try {\n            for (var _b = __values(this.getHandlers()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var handler = _c.value;\n                if (ctx !== undefined && handler.ctx !== ctx) {\n                    continue;\n                }\n                var wasStillAttached = handler.detach();\n                //NOTE: It should not be possible.\n                if (!wasStillAttached) {\n                    continue;\n                }\n                detachedHandlers.push(handler);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return detachedHandlers;\n    };\n    EvtImpl.prototype.pipe = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var evtDelegate = new EvtImpl();\n        this.addHandler(__assign(__assign({}, Evt_parsePropsFromArgs_1.parsePropsFromArgs(args, \"pipe\")), { \"callback\": function (transformedData) { return evtDelegate.post(transformedData); } }), EvtImpl.propsFormMethodNames.attach);\n        return evtDelegate;\n    };\n    EvtImpl.prototype.waitFor = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return this.addHandler(Evt_parsePropsFromArgs_1.parsePropsFromArgs(args, \"waitFor\"), EvtImpl.propsFormMethodNames.waitFor).promise;\n    };\n    EvtImpl.prototype.$attach = function () {\n        var inputs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            inputs[_i] = arguments[_i];\n        }\n        return this.attach.apply(this, __spread(inputs));\n    };\n    EvtImpl.prototype.attach = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return this.__attachX(args, \"attach\");\n    };\n    EvtImpl.prototype.$attachOnce = function () {\n        var inputs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            inputs[_i] = arguments[_i];\n        }\n        return this.attachOnce.apply(this, __spread(inputs));\n    };\n    EvtImpl.prototype.attachOnce = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return this.__attachX(args, \"attachOnce\");\n    };\n    EvtImpl.prototype.$attachExtract = function () {\n        var inputs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            inputs[_i] = arguments[_i];\n        }\n        return this.attachExtract.apply(this, __spread(inputs));\n    };\n    EvtImpl.prototype.attachExtract = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return this.__attachX(args, \"attachExtract\");\n    };\n    EvtImpl.prototype.$attachPrepend = function () {\n        var inputs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            inputs[_i] = arguments[_i];\n        }\n        return this.attachPrepend.apply(this, __spread(inputs));\n    };\n    EvtImpl.prototype.attachPrepend = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return this.__attachX(args, \"attachPrepend\");\n    };\n    EvtImpl.prototype.$attachOncePrepend = function () {\n        var inputs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            inputs[_i] = arguments[_i];\n        }\n        return this.attachOncePrepend.apply(this, __spread(inputs));\n    };\n    EvtImpl.prototype.attachOncePrepend = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return this.__attachX(args, \"attachOncePrepend\");\n    };\n    EvtImpl.prototype.$attachOnceExtract = function () {\n        var inputs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            inputs[_i] = arguments[_i];\n        }\n        return this.attachOnceExtract.apply(this, __spread(inputs));\n    };\n    EvtImpl.prototype.attachOnceExtract = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return this.__attachX(args, \"attachOnceExtract\");\n    };\n    EvtImpl.prototype.__attachX = function (args, methodName) {\n        var propsFromArgs = Evt_parsePropsFromArgs_1.parsePropsFromArgs(args, \"attach*\");\n        var handler = this.addHandler(propsFromArgs, EvtImpl.propsFormMethodNames[methodName]);\n        return propsFromArgs.timeout === undefined ?\n            this :\n            handler.promise;\n    };\n    EvtImpl.prototype.postAsyncOnceHandled = function (data) {\n        var _this_1 = this;\n        if (this.isHandled(data)) {\n            return this.post(data);\n        }\n        var d = new Deferred_1.Deferred();\n        this.evtAttach.attachOnce(function (_a) {\n            var op = _a.op;\n            return !!invokeOperator_1.invokeOperator(_this_1.getStatelessOp(op), data);\n        }, function () { return Promise.resolve().then(function () { return d.resolve(_this_1.post(data)); }); });\n        return d.pr;\n    };\n    EvtImpl.prototype.postOrPostAndWait = function (data, wait) {\n        var _this_1 = this;\n        this.trace(data);\n        overwriteReadonlyProp_1.overwriteReadonlyProp(this, \"postCount\", this.postCount + 1);\n        //NOTE: Must be before postSync.\n        var postChronologyMark = this.getChronologyMark();\n        var _a = __read(this.postSync(data), 2), isExtracted = _a[0], prAllHandlerCallbacksResolved = _a[1];\n        var getReturnValue = wait ?\n            function () { return prAllHandlerCallbacksResolved; } :\n            function () { return _this_1.postCount; };\n        if (isExtracted) {\n            return getReturnValue();\n        }\n        if (this.postAsync === undefined) {\n            if (this.asyncHandlerCount === 0) {\n                return getReturnValue();\n            }\n            this.postAsync = this.postAsyncFactory();\n        }\n        this.postAsync(data, postChronologyMark);\n        return getReturnValue();\n    };\n    EvtImpl.prototype.post = function (data) {\n        return this.postOrPostAndWait(data, false);\n    };\n    EvtImpl.prototype.postAndWait = function (data) {\n        return this.postOrPostAndWait(data, true);\n    };\n    EvtImpl.create = Evt_create_1.create;\n    EvtImpl.newCtx = Evt_newCtx_1.newCtx;\n    EvtImpl.merge = Evt_merge_1.merge;\n    EvtImpl.from = Evt_from_1.from;\n    EvtImpl.useEffect = Evt_useEffect_1.useEffect;\n    EvtImpl.getCtx = Evt_getCtx_1.getCtxFactory();\n    EvtImpl.loosenType = Evt_loosenType_1.loosenType;\n    EvtImpl.factorize = Evt_factorize_1.factorize;\n    EvtImpl.asPostable = Evt_asPostable_1.asPostable;\n    EvtImpl.asyncPipe = Evt_asyncPipe_1.asyncPipe;\n    EvtImpl.asNonPostable = Evt_asNonPostable_1.asNonPostable;\n    EvtImpl.__defaultMaxHandlers = 25;\n    EvtImpl.__1 = (function () {\n        if (false) {\n            EvtImpl.__1;\n        }\n        defineAccessors_1.defineAccessors(EvtImpl.prototype, \"evtAttach\", {\n            \"get\": function () {\n                return this.lazyEvtAttach.evt;\n            }\n        });\n        defineAccessors_1.defineAccessors(EvtImpl.prototype, \"evtDetach\", {\n            \"get\": function () {\n                return this.lazyEvtDetach.evt;\n            }\n        });\n    })();\n    EvtImpl.__2 = (function () {\n        if (false) {\n            EvtImpl.__2;\n        }\n        Object.defineProperties(EvtImpl.prototype, [\n            \"__asyncHandlerChronologyMark\",\n            \"__asyncHandlerChronologyExceptionRange\",\n            \"__statelessByStatefulOp\"\n        ].map(function (key) { return [\n            key.substr(2),\n            {\n                \"get\": function () {\n                    if (this[key] === undefined) {\n                        this[key] = new WeakMap_1.Polyfill();\n                    }\n                    return this[key];\n                }\n            }\n        ]; }).reduce(function (prev, _a) {\n            var _b;\n            var _c = __read(_a, 2), key = _c[0], obj = _c[1];\n            return (__assign(__assign({}, prev), (_b = {}, _b[key] = obj, _b)));\n        }, {}));\n    })();\n    EvtImpl.propsFormMethodNames = {\n        \"waitFor\": { \"async\": true, \"extract\": false, \"once\": true, \"prepend\": false },\n        \"attach\": { \"async\": false, \"extract\": false, \"once\": false, \"prepend\": false },\n        \"attachExtract\": { \"async\": false, \"extract\": true, \"once\": false, \"prepend\": true },\n        \"attachPrepend\": { \"async\": false, \"extract\": false, \"once\": false, \"prepend\": true },\n        \"attachOnce\": { \"async\": false, \"extract\": false, \"once\": true, \"prepend\": false },\n        \"attachOncePrepend\": { \"async\": false, \"extract\": false, \"once\": true, \"prepend\": true },\n        \"attachOnceExtract\": { \"async\": false, \"extract\": true, \"once\": true, \"prepend\": true }\n    };\n    return EvtImpl;\n}());\n(function (EvtImpl) {\n    function doDetachIfNeeded(handler, opResult, once) {\n        var detach = Operator_1.Operator.fλ.Result.getDetachArg(opResult);\n        if (typeof detach !== \"boolean\") {\n            var _a = __read(detach, 3), ctx = _a[0], error = _a[1], res = _a[2];\n            if (!!error) {\n                ctx.abort(error);\n            }\n            else {\n                ctx.done(res);\n            }\n        }\n        else if (detach || !!once) {\n            handler.detach();\n        }\n    }\n    EvtImpl.doDetachIfNeeded = doDetachIfNeeded;\n})(EvtImpl || (EvtImpl = {}));\nexports.Evt = EvtImpl;\ntry {\n    overwriteReadonlyProp_1.overwriteReadonlyProp(exports.Evt, \"name\", \"Evt\");\n}\ncatch (_a) { }\nimportProxy_1.importProxy.Evt = exports.Evt;\n//# sourceMappingURL=Evt.js.map","\"use strict\";\nexports.__esModule = true;\nexports.loosenType = void 0;\n/**\n * https://docs.evt.land/api/evt/loosenType\n */\nfunction loosenType(evt) {\n    return evt;\n}\nexports.loosenType = loosenType;\n/*\nimport { Evt } from \"./Evt\";\nconst x: Evt<boolean> = loosenType(new Evt<true>()); x;\nconst y: Evt<boolean> = loosenType(new Evt<number>()); y;\n*/\n//# sourceMappingURL=Evt.loosenType.js.map","\"use strict\";\nexports.__esModule = true;\nexports.merge = exports.mergeImpl = void 0;\nvar importProxy_1 = require(\"./importProxy\");\nfunction mergeImpl(ctx, evts) {\n    var evtUnion = new importProxy_1.importProxy.Evt();\n    var callback = function (data) { return evtUnion.post(data); };\n    evts.forEach(function (evt) {\n        if (ctx === undefined) {\n            evt.attach(callback);\n        }\n        else {\n            evt.attach(ctx, callback);\n        }\n    });\n    return evtUnion;\n}\nexports.mergeImpl = mergeImpl;\nfunction merge(p1, p2) {\n    return \"length\" in p1 ?\n        mergeImpl(undefined, p1) :\n        mergeImpl(p1, p2);\n}\nexports.merge = merge;\n//# sourceMappingURL=Evt.merge.js.map","\"use strict\";\nexports.__esModule = true;\nexports.newCtx = void 0;\nvar importProxy_1 = require(\"./importProxy\");\nfunction newCtx() {\n    return new importProxy_1.importProxy.Ctx();\n}\nexports.newCtx = newCtx;\n//# sourceMappingURL=Evt.newCtx.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nexports.__esModule = true;\nexports.parsePropsFromArgs = exports.matchAll = void 0;\nvar id_1 = require(\"../tools/typeSafety/id\");\nvar compose_1 = require(\"./util/compose\");\nvar typeGuard_1 = require(\"../tools/typeSafety/typeGuard\");\nfunction matchAll() { return true; }\nexports.matchAll = matchAll;\nvar canBeOperator = function (p) {\n    return (p !== undefined &&\n        typeGuard_1.typeGuard(p) &&\n        (typeof p === \"function\" ||\n            typeof p[0] === \"function\"));\n};\nvar defaultParams = {\n    \"op\": matchAll,\n    \"ctx\": undefined,\n    \"timeout\": undefined,\n    \"callback\": undefined\n};\nfunction parsePropsFromArgs(inputs, methodName) {\n    typeGuard_1.typeGuard(defaultParams);\n    switch (methodName) {\n        case \"pipe\":\n            {\n                //[]\n                //[undefined] ( not valid but user would expect it to work )\n                //[ ctx, ...op[] ]\n                //[ ...op[] ]\n                var getOpWrap = function (ops) {\n                    return ops.length === 0 ?\n                        {}\n                        :\n                            { \"op\": ops.length === 1 ? ops[0] : compose_1.compose.apply(void 0, __spread(ops)) };\n                };\n                if (canBeOperator(inputs[0])) {\n                    //[ ...op[] ]\n                    return id_1.id(__assign(__assign({}, defaultParams), getOpWrap(inputs)));\n                }\n                else {\n                    //[]\n                    //[ ctx, ...Operator.fλ[] ]\n                    var _a = __read(inputs), ctx = _a[0], rest = _a.slice(1);\n                    return id_1.id(__assign(__assign(__assign({}, defaultParams), (ctx !== undefined ? { ctx: ctx } : {})), getOpWrap(rest)));\n                }\n            }\n            break;\n        case \"waitFor\":\n            {\n                //[ op, ctx, timeout ]\n                //[ op, ctx, undefined ]\n                //[ op, ctx ]\n                //[ op, timeout ]\n                //[ op, undefined ]\n                //[ ctx, timeout ]\n                //[ ctx, undefined ]\n                //[ op ]\n                //[ ctx ]\n                //[ timeout ]\n                //[ undefined ]\n                //[ callback ]\n                return parsePropsFromArgs(__spread(inputs.filter(function (value, index) { return !(index === inputs.length - 1 &&\n                    value === undefined); }), [\n                    defaultParams.callback\n                ]), \"attach*\");\n            }\n            break;\n        case \"attach*\":\n            {\n                //NOTE: when callback is undefined call has been forward from waitFor.\n                //[ op, ctx, timeout, callback ]\n                //[ op, ctx, timeout, undefined ]\n                //[ op, ctx, callback ]\n                //[ op, ctx, undefined ]\n                //[ op, timeout, callback ]\n                //[ op, timeout, undefined ]\n                //[ ctx, timeout, callback ]\n                //[ ctx, timeout, undefined ]\n                //[ op, callback ]\n                //[ op, undefined ]\n                //[ ctx, callback ]\n                //[ ctx, undefined ]\n                //[ timeout, callback ]\n                //[ timeout, undefined ]\n                //[ callback ]\n                //[ undefined ]\n                var n = inputs.length;\n                switch (n) {\n                    case 4: {\n                        //[ op, ctx, timeout, callback ]\n                        var _b = __read(inputs, 4), p1 = _b[0], p2 = _b[1], p3 = _b[2], p4 = _b[3];\n                        return id_1.id(__assign(__assign({}, defaultParams), { \"op\": p1, \"ctx\": p2, \"timeout\": p3, \"callback\": p4 }));\n                    }\n                    case 3: {\n                        //[ op, ctx, callback ]\n                        //[ op, timeout, callback ]\n                        //[ ctx, timeout, callback ]\n                        var _c = __read(inputs, 3), p1 = _c[0], p2 = _c[1], p3 = _c[2];\n                        if (typeof p2 === \"number\") {\n                            //[ op, timeout, callback ]\n                            //[ ctx, timeout, callback ]\n                            var timeout = p2;\n                            var callback = p3;\n                            if (canBeOperator(p1)) {\n                                //[ op, timeout, callback ]\n                                return id_1.id(__assign(__assign({}, defaultParams), { timeout: timeout,\n                                    callback: callback, \"op\": p1 }));\n                            }\n                            else {\n                                //[ ctx, timeout, callback ]\n                                return id_1.id(__assign(__assign({}, defaultParams), { timeout: timeout,\n                                    callback: callback, \"ctx\": p1 }));\n                            }\n                        }\n                        else {\n                            //[ op, ctx, callback ]\n                            return id_1.id(__assign(__assign({}, defaultParams), { \"op\": p1, \"ctx\": p2, \"callback\": p3 }));\n                        }\n                    }\n                    case 2: {\n                        //[ op, callback ]\n                        //[ ctx, callback ]\n                        //[ timeout, callback ]\n                        var _d = __read(inputs, 2), p1 = _d[0], p2 = _d[1];\n                        if (typeof p1 === \"number\") {\n                            //[ timeout, callback ]\n                            return id_1.id(__assign(__assign({}, defaultParams), { \"timeout\": p1, \"callback\": p2 }));\n                        }\n                        else {\n                            //[ op, callback ]\n                            //[ ctx, callback ]\n                            var callback = p2;\n                            if (canBeOperator(p1)) {\n                                return id_1.id(__assign(__assign({}, defaultParams), { callback: callback, \"op\": p1 }));\n                            }\n                            else {\n                                return id_1.id(__assign(__assign({}, defaultParams), { callback: callback, \"ctx\": p1 }));\n                            }\n                        }\n                    }\n                    case 1: {\n                        //[ callback ]\n                        var _e = __read(inputs, 1), p = _e[0];\n                        return id_1.id(__assign(__assign({}, defaultParams), { \"callback\": p }));\n                    }\n                    case 0: {\n                        return id_1.id(__assign({}, defaultParams));\n                    }\n                }\n            }\n            break;\n    }\n}\nexports.parsePropsFromArgs = parsePropsFromArgs;\n//# sourceMappingURL=Evt.parsePropsFromArgs.js.map","\"use strict\";\nexports.__esModule = true;\nexports.useEffect = void 0;\nfunction useEffect(effect, evt, dataFirst) {\n    var i = 0;\n    (\"state\" in evt ? evt.evtChange : evt)\n        .attach(function (data) {\n        return effect(data, { \"isFirst\": false, data: data }, i++);\n    });\n    effect(\"state\" in evt ? evt.state : dataFirst === null || dataFirst === void 0 ? void 0 : dataFirst[0], { \"isFirst\": true }, i++);\n}\nexports.useEffect = useEffect;\n//# sourceMappingURL=Evt.useEffect.js.map","\"use strict\";\nexports.__esModule = true;\nexports.LazyEvt = void 0;\nvar overwriteReadonlyProp_1 = require(\"../tools/typeSafety/overwriteReadonlyProp\");\nvar importProxy_1 = require(\"./importProxy\");\nvar defineAccessors_1 = require(\"../tools/typeSafety/defineAccessors\");\nvar LazyEvt = /** @class */ (function () {\n    function LazyEvt() {\n        this.initialPostCount = 0;\n    }\n    LazyEvt.prototype.post = function (data) {\n        if (this.__evt === undefined) {\n            return ++this.initialPostCount;\n        }\n        return this.__evt.post(data);\n    };\n    LazyEvt.__1 = (function () {\n        if (false) {\n            LazyEvt.__1;\n        }\n        defineAccessors_1.defineAccessors(LazyEvt.prototype, \"evt\", {\n            \"get\": function () {\n                if (this.__evt === undefined) {\n                    this.__evt = new importProxy_1.importProxy.Evt();\n                    overwriteReadonlyProp_1.overwriteReadonlyProp(this.__evt, \"postCount\", this.initialPostCount);\n                }\n                return this.__evt;\n            }\n        });\n    })();\n    return LazyEvt;\n}());\nexports.LazyEvt = LazyEvt;\n//# sourceMappingURL=LazyEvt.js.map","\"use strict\";\nexports.__esModule = true;\nexports.LazyStatefulEvt = void 0;\nvar overwriteReadonlyProp_1 = require(\"../tools/typeSafety/overwriteReadonlyProp\");\nvar importProxy_1 = require(\"./importProxy\");\nvar defineAccessors_1 = require(\"../tools/typeSafety/defineAccessors\");\nvar LazyStatefulEvt = /** @class */ (function () {\n    function LazyStatefulEvt(initialState) {\n        this.initialPostCount = 0;\n        this.initialState = initialState;\n    }\n    LazyStatefulEvt.prototype.post = function (data) {\n        if (this.__evt === undefined) {\n            this.initialState = data;\n            return ++this.initialPostCount;\n        }\n        return this.__evt.post(data);\n    };\n    LazyStatefulEvt.__1 = (function () {\n        if (false) {\n            LazyStatefulEvt.__1;\n        }\n        defineAccessors_1.defineAccessors(LazyStatefulEvt.prototype, \"evt\", {\n            \"get\": function () {\n                if (this.__evt === undefined) {\n                    this.__evt = new importProxy_1.importProxy.StatefulEvt(this.initialState);\n                    delete this.initialState;\n                    overwriteReadonlyProp_1.overwriteReadonlyProp(this.__evt, \"postCount\", this.initialPostCount);\n                }\n                return this.__evt;\n            }\n        });\n    })();\n    return LazyStatefulEvt;\n}());\nexports.LazyStatefulEvt = LazyStatefulEvt;\n//# sourceMappingURL=LazyStatefulEvt.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nexports.__esModule = true;\nexports.StatefulEvt = void 0;\nrequire(\"minimal-polyfills/Object.is\");\nvar defineAccessors_1 = require(\"../tools/typeSafety/defineAccessors\");\nvar LazyEvt_1 = require(\"./LazyEvt\");\nvar LazyStatefulEvt_1 = require(\"./LazyStatefulEvt\");\nvar importProxy_1 = require(\"./importProxy\");\nvar invokeOperator_1 = require(\"./util/invokeOperator\");\nvar Operator_1 = require(\"./types/Operator\");\nvar Evt_parsePropsFromArgs_1 = require(\"./Evt.parsePropsFromArgs\");\nvar Evt_2 = require(\"./Evt\");\nvar StatefulEvtImpl = /** @class */ (function (_super) {\n    __extends(StatefulEvtImpl, _super);\n    function StatefulEvtImpl(initialState) {\n        var _this_1 = _super.call(this) || this;\n        _this_1.lazyEvtDiff = new LazyEvt_1.LazyEvt();\n        _this_1.lazyEvtChangeDiff = new LazyEvt_1.LazyEvt();\n        _this_1.__state = initialState;\n        _this_1.lazyEvtChange = new LazyStatefulEvt_1.LazyStatefulEvt(_this_1.__state);\n        return _this_1;\n    }\n    StatefulEvtImpl.prototype.post = function (data) {\n        return this.__post(data, false);\n    };\n    StatefulEvtImpl.prototype.postForceChange = function (wData) {\n        return this.__post(!!wData ? wData[0] : this.state, true);\n    };\n    StatefulEvtImpl.prototype.__post = function (data, forceChange) {\n        var prevState = this.state;\n        this.__state = data;\n        var diff = { prevState: prevState, \"newState\": this.state };\n        this.lazyEvtDiff.post(diff);\n        if (forceChange || !Object.is(prevState, this.state)) {\n            this.lazyEvtChange.post(this.state);\n            this.lazyEvtChangeDiff.post(diff);\n        }\n        return _super.prototype.post.call(this, data);\n    };\n    StatefulEvtImpl.prototype.pipe = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var evt = _super.prototype.pipe.apply(this, __spread(args));\n        var opResult = invokeOperator_1.invokeOperator(this.getStatelessOp(Evt_parsePropsFromArgs_1.parsePropsFromArgs(args, \"pipe\").op), this.state);\n        if (Operator_1.Operator.fλ.Result.NotMatched.match(opResult)) {\n            throw new Error([\n                \"Cannot pipe StatefulEvt because the operator does not match\",\n                \"it's current state.\",\n                \"Use evt.toStateless([ctx]).pipe(op).toStatic(initialState)\",\n                \"to be sure the StatefulEvt is correctly initialized\"\n            ].join(\" \"));\n        }\n        return evt.toStateful(opResult[0]);\n    };\n    StatefulEvtImpl.prototype.toStateless = function (ctx) {\n        return !!ctx ? _super.prototype.pipe.call(this, ctx) : _super.prototype.pipe.call(this);\n    };\n    StatefulEvtImpl.__4 = (function () {\n        if (false) {\n            StatefulEvtImpl.__4;\n        }\n        defineAccessors_1.defineAccessors(StatefulEvtImpl.prototype, \"state\", {\n            \"get\": function () { return this.__state; },\n            \"set\": function (state) { this.post(state); }\n        });\n        defineAccessors_1.defineAccessors(StatefulEvtImpl.prototype, \"evtDiff\", { \"get\": function () { return this.lazyEvtDiff.evt; } });\n        defineAccessors_1.defineAccessors(StatefulEvtImpl.prototype, \"evtChange\", { \"get\": function () { return this.lazyEvtChange.evt; } });\n        defineAccessors_1.defineAccessors(StatefulEvtImpl.prototype, \"evtChangeDiff\", { \"get\": function () { return this.lazyEvtChangeDiff.evt; } });\n    })();\n    return StatefulEvtImpl;\n}(Evt_2.Evt));\nexports.StatefulEvt = StatefulEvtImpl;\nimportProxy_1.importProxy.StatefulEvt = exports.StatefulEvt;\n//# sourceMappingURL=StatefulEvt.js.map","\"use strict\";\nexports.__esModule = true;\nexports.importProxy = void 0;\n/** Manually handling circular import so React Native does not gives warning. */\nexports.importProxy = {};\n//# sourceMappingURL=importProxy.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nexports.__esModule = true;\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./util\"), exports);\nvar Ctx_1 = require(\"./Ctx\");\n__createBinding(exports, Ctx_1, \"Ctx\");\nvar Evt_2 = require(\"./Evt\");\n__createBinding(exports, Evt_2, \"Evt\");\nvar StatefulEvt_1 = require(\"./StatefulEvt\");\n__createBinding(exports, StatefulEvt_1, \"StatefulEvt\");\nvar matchVoid_1 = require(\"../tools/typeSafety/matchVoid\");\n__createBinding(exports, matchVoid_1, \"matchVoid\");\n//# sourceMappingURL=index.js.map","\"use strict\";\nexports.__esModule = true;\nexports.EventTargetLike = void 0;\nvar typeSafety_1 = require(\"../../tools/typeSafety\");\nvar EventTargetLike;\n(function (EventTargetLike) {\n    var RxJSSubject;\n    (function (RxJSSubject) {\n        function match(eventTarget) {\n            return (typeSafety_1.typeGuard(eventTarget) &&\n                eventTarget instanceof Object &&\n                typeof eventTarget.subscribe === \"function\");\n        }\n        RxJSSubject.match = match;\n    })(RxJSSubject = EventTargetLike.RxJSSubject || (EventTargetLike.RxJSSubject = {}));\n    var NodeStyleEventEmitter;\n    (function (NodeStyleEventEmitter) {\n        ;\n        function match(eventTarget) {\n            return (typeSafety_1.typeGuard(eventTarget) &&\n                eventTarget instanceof Object &&\n                typeof eventTarget.addListener === \"function\" &&\n                typeof eventTarget.removeListener === \"function\");\n        }\n        NodeStyleEventEmitter.match = match;\n    })(NodeStyleEventEmitter = EventTargetLike.NodeStyleEventEmitter || (EventTargetLike.NodeStyleEventEmitter = {}));\n    var JQueryStyleEventEmitter;\n    (function (JQueryStyleEventEmitter) {\n        function match(eventTarget) {\n            return (typeSafety_1.typeGuard(eventTarget) &&\n                eventTarget instanceof Object &&\n                typeof eventTarget.on === \"function\" &&\n                typeof eventTarget.off === \"function\");\n        }\n        JQueryStyleEventEmitter.match = match;\n    })(JQueryStyleEventEmitter = EventTargetLike.JQueryStyleEventEmitter || (EventTargetLike.JQueryStyleEventEmitter = {}));\n    var HasEventTargetAddRemove;\n    (function (HasEventTargetAddRemove) {\n        function match(eventTarget) {\n            return (typeSafety_1.typeGuard(eventTarget) &&\n                eventTarget instanceof Object &&\n                typeof eventTarget.addEventListener === \"function\" &&\n                typeof eventTarget.removeEventListener === \"function\");\n        }\n        HasEventTargetAddRemove.match = match;\n    })(HasEventTargetAddRemove = EventTargetLike.HasEventTargetAddRemove || (EventTargetLike.HasEventTargetAddRemove = {}));\n    /* Return true if o can be a EventTargetLike */\n    function canBe(o) {\n        try {\n            return (HasEventTargetAddRemove.match(o) ||\n                NodeStyleEventEmitter.match(o) ||\n                JQueryStyleEventEmitter.match(o) ||\n                RxJSSubject.match(o));\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    EventTargetLike.canBe = canBe;\n})(EventTargetLike = exports.EventTargetLike || (exports.EventTargetLike = {}));\n//# sourceMappingURL=EventTargetLike.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nexports.EvtError = void 0;\nvar EvtError;\n(function (EvtError) {\n    var Timeout = /** @class */ (function (_super) {\n        __extends(Timeout, _super);\n        function Timeout(timeout) {\n            var _newTarget = this.constructor;\n            var _this_1 = _super.call(this, \"Evt timeout after \" + timeout + \"ms\") || this;\n            _this_1.timeout = timeout;\n            Object.setPrototypeOf(_this_1, _newTarget.prototype);\n            return _this_1;\n        }\n        return Timeout;\n    }(Error));\n    EvtError.Timeout = Timeout;\n    var Detached = /** @class */ (function (_super) {\n        __extends(Detached, _super);\n        function Detached() {\n            var _newTarget = this.constructor;\n            var _this_1 = _super.call(this, \"Evt handler detached\") || this;\n            Object.setPrototypeOf(_this_1, _newTarget.prototype);\n            return _this_1;\n        }\n        return Detached;\n    }(Error));\n    EvtError.Detached = Detached;\n})(EvtError = exports.EvtError || (exports.EvtError = {}));\n//# sourceMappingURL=EvtError.js.map","\"use strict\";\nexports.__esModule = true;\nexports.Operator = void 0;\nvar typeSafety_1 = require(\"../../tools/typeSafety\");\nvar Operator;\n(function (Operator) {\n    var fλ;\n    (function (fλ) {\n        var Stateful;\n        (function (Stateful) {\n            function match(op) {\n                return typeof op !== \"function\";\n            }\n            Stateful.match = match;\n        })(Stateful = fλ.Stateful || (fλ.Stateful = {}));\n        var Result;\n        (function (Result) {\n            function match(result) {\n                return Matched.match(result) || NotMatched.match(result);\n            }\n            Result.match = match;\n            function getDetachArg(result) {\n                var detach = Matched.match(result) ? result[1] : result;\n                if (Detach.FromEvt.match(detach)) {\n                    return true;\n                }\n                if (Detach.WithCtxArg.match(detach)) {\n                    return [\n                        detach.DETACH,\n                        detach.err,\n                        detach.res\n                    ];\n                }\n                return false;\n            }\n            Result.getDetachArg = getDetachArg;\n            var NotMatched;\n            (function (NotMatched) {\n                function match(result) {\n                    return (result === null ||\n                        Detach.match(result));\n                }\n                NotMatched.match = match;\n            })(NotMatched = Result.NotMatched || (Result.NotMatched = {}));\n            var Matched;\n            (function (Matched) {\n                function match(result) {\n                    return (typeSafety_1.typeGuard(result) &&\n                        result instanceof Object &&\n                        !(\"input\" in result) && //exclude String.prototype.match\n                        (result.length === 1 ||\n                            (result.length === 2 &&\n                                (result[1] === null ||\n                                    Detach.match(result[1])))));\n                }\n                Matched.match = match;\n            })(Matched = Result.Matched || (Result.Matched = {}));\n            var Detach;\n            (function (Detach) {\n                var FromEvt;\n                (function (FromEvt) {\n                    function match(detach) {\n                        return detach === \"DETACH\";\n                    }\n                    FromEvt.match = match;\n                })(FromEvt = Detach.FromEvt || (Detach.FromEvt = {}));\n                var WithCtxArg;\n                (function (WithCtxArg) {\n                    function match(detach) {\n                        return (typeSafety_1.typeGuard(detach) &&\n                            detach instanceof Object &&\n                            detach.DETACH instanceof Object);\n                    }\n                    WithCtxArg.match = match;\n                })(WithCtxArg = Detach.WithCtxArg || (Detach.WithCtxArg = {}));\n                function match(detach) {\n                    return FromEvt.match(detach) || WithCtxArg.match(detach);\n                }\n                Detach.match = match;\n            })(Detach = Result.Detach || (Result.Detach = {}));\n        })(Result = fλ.Result || (fλ.Result = {}));\n    })(fλ = Operator.fλ || (Operator.fλ = {}));\n})(Operator = exports.Operator || (exports.Operator = {}));\n//# sourceMappingURL=Operator.js.map","\"use strict\";\nexports.__esModule = true;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nexports.__esModule = true;\nexports.dom = void 0;\n__exportStar(require(\"./helper\"), exports);\n__exportStar(require(\"./interfaces\"), exports);\nvar EventTargetLike_1 = require(\"./EventTargetLike\");\n__createBinding(exports, EventTargetLike_1, \"EventTargetLike\");\nvar EvtError_1 = require(\"./EvtError\");\n__createBinding(exports, EvtError_1, \"EvtError\");\nvar dom = require(\"./lib.dom\");\nexports.dom = dom;\nvar Operator_1 = require(\"./Operator\");\n__createBinding(exports, Operator_1, \"Operator\");\n//# sourceMappingURL=index.js.map","\"use strict\";\nexports.__esModule = true;\nexports.CtxLike = void 0;\nvar typeGuard_1 = require(\"../../../tools/typeSafety/typeGuard\");\nvar CtxLike;\n(function (CtxLike) {\n    function match(o) {\n        return (typeGuard_1.typeGuard(o) &&\n            o instanceof Object &&\n            typeof o.done === \"function\" &&\n            typeof o.abort === \"function\" &&\n            typeof o.zz__addHandler === \"function\" &&\n            typeof o.zz__removeHandler === \"function\");\n    }\n    CtxLike.match = match;\n})(CtxLike = exports.CtxLike || (exports.CtxLike = {}));\n//# sourceMappingURL=CtxLike.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nexports.__esModule = true;\nvar CtxLike_1 = require(\"./CtxLike\");\n__createBinding(exports, CtxLike_1, \"CtxLike\");\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\nThis is a curated re export of the dom API definitions.\n\nThe DOM definitions are available only when \"compilerOptions\": { \"lib\": [\"DOM\"] }}\nis present in the tsconfig.json.\n\nWe need we re-export those definitions so that we can expose methods that interact with\nthe DOM ( ex Evt.from ) while not producing type error when\nEVT is imported in project that does not use 'lib DOM', typically\nprojects that targets Node.JS.\n*/\nexports.__esModule = true;\nexports.__hack = void 0;\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n \nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n \nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nexports.__hack = \"NOT TYPE ONLY\";\n//# sourceMappingURL=lib.dom.js.map","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nexports.__esModule = true;\nexports.compose = void 0;\nvar encapsulateOpState_1 = require(\"./encapsulateOpState\");\nvar invokeOperator_1 = require(\"./invokeOperator\");\nvar Operator_1 = require(\"../types/Operator\");\nvar id_1 = require(\"../../tools/typeSafety/id\");\nvar assert_1 = require(\"../../tools/typeSafety/assert\");\nvar typeGuard_1 = require(\"../../tools/typeSafety/typeGuard\");\nfunction f_o_g(op1, op2) {\n    var opAtoB = Operator_1.Operator.fλ.Stateful.match(op1) ?\n        encapsulateOpState_1.encapsulateOpState(op1) :\n        id_1.id(op1);\n    var opBtoC = Operator_1.Operator.fλ.Stateful.match(op2) ?\n        encapsulateOpState_1.encapsulateOpState(op2) :\n        id_1.id(op2);\n    return id_1.id(function () {\n        var _a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            _a[_i] = arguments[_i];\n        }\n        var _b = __read(_a, 3), dataA = _b[0], isPost = _b[2];\n        var resultB = invokeOperator_1.invokeOperator(opAtoB, dataA, isPost);\n        if (Operator_1.Operator.fλ.Result.NotMatched.match(resultB)) {\n            //CtxResultOp1 assignable to CtxResultOp1 | CtxResultOp2...\n            assert_1.assert(typeGuard_1.typeGuard(resultB));\n            return resultB;\n        }\n        var detachOp1 = !!resultB[1] ? resultB[1] : null;\n        //...same...\n        assert_1.assert(typeGuard_1.typeGuard(detachOp1));\n        var _c = __read(resultB, 1), dataB = _c[0];\n        var resultC = invokeOperator_1.invokeOperator(opBtoC, dataB, isPost);\n        if (Operator_1.Operator.fλ.Result.NotMatched.match(resultC)) {\n            //...same\n            assert_1.assert(typeGuard_1.typeGuard(resultC));\n            return detachOp1 !== null ? detachOp1 : resultC;\n        }\n        return id_1.id([\n            resultC[0],\n            !!detachOp1 ? detachOp1 : (!!resultC[1] ? resultC[1] : null)\n        ]);\n    });\n}\nfunction compose() {\n    var ops = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ops[_i] = arguments[_i];\n    }\n    if (ops.length === 1) {\n        var _a = __read(ops, 1), op = _a[0];\n        return Operator_1.Operator.fλ.Stateful.match(op) ?\n            encapsulateOpState_1.encapsulateOpState(op) :\n            op;\n    }\n    var _b = __read(ops), op1 = _b[0], op2 = _b[1], rest = _b.slice(2);\n    var op1_o_op2 = f_o_g(op1, op2);\n    if (rest.length === 0) {\n        return op1_o_op2;\n    }\n    return compose.apply(void 0, __spread([op1_o_op2], rest));\n}\nexports.compose = compose;\n//# sourceMappingURL=compose.js.map","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nexports.__esModule = true;\nexports.encapsulateOpState = void 0;\nvar id_1 = require(\"../../tools/typeSafety/id\");\nvar Operator_1 = require(\"../types/Operator\");\nfunction encapsulateOpState(statefulFλOp) {\n    var state = statefulFλOp[1];\n    return id_1.id(function () {\n        var _a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            _a[_i] = arguments[_i];\n        }\n        var _b = __read(_a, 3), data = _b[0], cbInvokedIfMatched = _b[2];\n        var opResult = statefulFλOp[0](data, state, cbInvokedIfMatched);\n        if (!!cbInvokedIfMatched &&\n            Operator_1.Operator.fλ.Result.Matched.match(opResult)) {\n            state = opResult[0];\n        }\n        return opResult;\n    });\n}\nexports.encapsulateOpState = encapsulateOpState;\n//# sourceMappingURL=encapsulateOpState.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nexports.__esModule = true;\nvar throttleTime_1 = require(\"./throttleTime\");\n__createBinding(exports, throttleTime_1, \"throttleTime\");\nvar to_1 = require(\"./to\");\n__createBinding(exports, to_1, \"to\");\n//# sourceMappingURL=index.js.map","\"use strict\";\nexports.__esModule = true;\nexports.throttleTime = void 0;\nvar compose_1 = require(\"../compose\");\nexports.throttleTime = function (duration) {\n    return compose_1.compose([\n        function (data, _a) {\n            var lastClick = _a.lastClick;\n            var now = Date.now();\n            return now - lastClick < duration ?\n                null :\n                [{ data: data, \"lastClick\": now }];\n        },\n        { \"lastClick\": 0, \"data\": null }\n    ], function (_a) {\n        var data = _a.data;\n        return [data];\n    });\n};\n//# sourceMappingURL=throttleTime.js.map","\"use strict\";\nexports.__esModule = true;\nexports.to = void 0;\n/*\nNOTE: Here we allow a tiny memory leak to be able to emulate\nthe EventEmitter.removeListener(event, callback) method easily.\n\nevt.getHandlers()\n    .filter(handler => (\n        handler.callback === callback &&\n        handler.op === to(\"event1\")\n    ))\n    .forEach(handler => handler.detach());\n*/\nvar map = new Map();\n/**\n * Operator that helps emulate an EventEmitter with EVT\n * See https://stackblitz.com/edit/evt-honvv3?file=index.ts\n * or https://docs.evt.land/extending_evt\n * */\nexports.to = function (eventName) { var _a; return (_a = map.get(eventName)) !== null && _a !== void 0 ? _a : (map.set(eventName, function (data) { return data[0] !== eventName ? null : [data[1]]; }),\n    exports.to(eventName)); };\n//# sourceMappingURL=to.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nexports.__esModule = true;\n__exportStar(require(\"./genericOperators\"), exports);\nvar compose_1 = require(\"./compose\");\n__createBinding(exports, compose_1, \"compose\");\nvar invokeOperator_1 = require(\"./invokeOperator\");\n__createBinding(exports, invokeOperator_1, \"invokeOperator\");\n//# sourceMappingURL=index.js.map","\"use strict\";\nexports.__esModule = true;\nexports.invokeOperator = void 0;\nvar Operator_1 = require(\"../types/Operator\");\nfunction invokeOperator(op, data, isPost) {\n    var result = op(data, undefined, isPost);\n    return Operator_1.Operator.fλ.Result.match(result) ?\n        result :\n        !!result ? [data] : null;\n}\nexports.invokeOperator = invokeOperator;\n//# sourceMappingURL=invokeOperator.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nexports.VoidDeferred = exports.Deferred = void 0;\nvar overwriteReadonlyProp_1 = require(\"./typeSafety/overwriteReadonlyProp\");\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this_1 = this;\n        this.isPending = true;\n        var resolve;\n        var reject;\n        this.pr = new Promise(function (resolve_, reject_) {\n            resolve = function (value) {\n                overwriteReadonlyProp_1.overwriteReadonlyProp(_this_1, \"isPending\", false);\n                resolve_(value);\n            };\n            reject = function (error) {\n                overwriteReadonlyProp_1.overwriteReadonlyProp(_this_1, \"isPending\", false);\n                reject_(error);\n            };\n        });\n        this.resolve = resolve;\n        this.reject = reject;\n    }\n    return Deferred;\n}());\nexports.Deferred = Deferred;\nvar VoidDeferred = /** @class */ (function (_super) {\n    __extends(VoidDeferred, _super);\n    function VoidDeferred() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return VoidDeferred;\n}(Deferred));\nexports.VoidDeferred = VoidDeferred;\n//# sourceMappingURL=Deferred.js.map","\"use strict\";\nexports.__esModule = true;\nexports.safeClearTimeout = exports.safeSetTimeout = void 0;\nexports.safeSetTimeout = function (callback, ms) { return setTimeout(callback, ms); };\nexports.safeClearTimeout = function (timer) { return clearTimeout(timer); };\n//# sourceMappingURL=safeSetTimeout.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nexports.__esModule = true;\nexports.assert = exports.AssertionError = void 0;\nvar overwriteReadonlyProp_1 = require(\"./overwriteReadonlyProp\");\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    function AssertionError(msg) {\n        var _newTarget = this.constructor;\n        var _this_1 = _super.call(this, \"Wrong assertion encountered\" + (!msg ? \"\" : \": \\\"\" + msg + \"\\\"\")) || this;\n        Object.setPrototypeOf(_this_1, _newTarget.prototype);\n        if (!_this_1.stack) {\n            return _this_1;\n        }\n        try {\n            overwriteReadonlyProp_1.overwriteReadonlyProp(_this_1, \"stack\", _this_1.stack\n                .split(\"\\n\")\n                .filter(function () {\n                var _a = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    _a[_i] = arguments[_i];\n                }\n                var _b = __read(_a, 2), i = _b[1];\n                return i !== 1 && i !== 2;\n            })\n                .join(\"\\n\"));\n        }\n        catch (_a) {\n        }\n        return _this_1;\n    }\n    return AssertionError;\n}(Error));\nexports.AssertionError = AssertionError;\nfunction assert(condition, msg) {\n    if (!condition) {\n        throw new AssertionError(msg);\n    }\n}\nexports.assert = assert;\n//# sourceMappingURL=assert.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nexports.defineAccessors = void 0;\nexports.defineAccessors = function (obj, propertyName, propertyDescriptor) {\n    var get = propertyDescriptor.get, set = propertyDescriptor.set;\n    Object.defineProperty(obj, propertyName, __assign(__assign(__assign({}, (Object.getOwnPropertyDescriptor(obj, propertyName) || {\n        \"enumerable\": true,\n        \"configurable\": true\n    })), (get !== undefined ? { \"get\": function () { return get.call(this); } } : {})), (set !== undefined ? { \"set\": function (value) { set.call(this, value); } } : {})));\n};\n//# sourceMappingURL=defineAccessors.js.map","\"use strict\";\nexports.__esModule = true;\nexports.exclude = void 0;\n/** Return a function to use as Array.prototype.filter argument\n * to exclude one or many primitive value element from the array.\n * Ex: ([ \"a\", \"b\" ] as const).filter(exclude(\"a\") return \"b\"[]\n */\nfunction exclude(target) {\n    var test = target instanceof Object ?\n        (function (element) { return target.indexOf(element) < 0; }) :\n        (function (element) { return element !== target; });\n    return function (str) {\n        return test(str);\n    };\n}\nexports.exclude = exclude;\n//# sourceMappingURL=exclude.js.map","\"use strict\";\nexports.__esModule = true;\nexports.id = void 0;\n/**\n * The identity function.\n *\n * Help to build an object of type T.\n * Better than using 'as T' as there is no type safety loss.\n *\n * - Used as continence for enabling type inference.\n * Example:\n *\n * type Circle = {\n *     type: \"CIRCLE\";\n *     radius: number;\n * };\n *\n * type Square = {\n *     type: \"SQUARE\";\n *     side: number;\n * };\n * type Shape= Circle | Square;\n *\n * declare function f(shape: Shape): void;\n *\n * f(id<Circle>({ \"type\": \"CIRCLE\", \"radius\": 33 }); <== We have auto completion to instantiate circle.\n *\n * - Used to loosen the type restriction without saying \"trust me\" to the compiler.\n * declare const x: Set<readonly [\"FOO\"]>;\n * declare function f(s: Set<string[]>): void;\n * f(id<Set<any>>(x));\n *\n * Example:\n * declare const x: Set<readonly [ \"FOO\" ]>;\n * declare f(x: Set<string[]>): void;\n * id(x as Set<[\"FOO\"]>); <== trust me it's readonly!\n * f(id<Set<any>>(x)); <== we acknowledge that we are out of the safe zone.\n */\nexports.id = function (x) { return x; };\n//# sourceMappingURL=id.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nexports.__esModule = true;\nvar assert_1 = require(\"./assert\");\n__createBinding(exports, assert_1, \"assert\");\nvar exclude_1 = require(\"./exclude\");\n__createBinding(exports, exclude_1, \"exclude\");\nvar id_1 = require(\"./id\");\n__createBinding(exports, id_1, \"id\");\nvar matchVoid_1 = require(\"./matchVoid\");\n__createBinding(exports, matchVoid_1, \"matchVoid\");\nvar objectKeys_1 = require(\"./objectKeys\");\n__createBinding(exports, objectKeys_1, \"objectKeys\");\nvar typeGuard_1 = require(\"./typeGuard\");\n__createBinding(exports, typeGuard_1, \"typeGuard\");\n//# sourceMappingURL=index.js.map","\"use strict\";\nexports.__esModule = true;\nexports.isPromiseLike = void 0;\nfunction isPromiseLike(o) {\n    return typeof (o === null || o === void 0 ? void 0 : o.then) === \"function\";\n}\nexports.isPromiseLike = isPromiseLike;\n//# sourceMappingURL=isPromiseLike.js.map","\"use strict\";\nexports.__esModule = true;\nexports.matchVoid = void 0;\n/**\n *\n * Unlike undefined or null, testing o !== void\n * will not restrict the type.\n *\n * Example:\n *\n * declare o: { p: string; } | void;\n *\n * matchVoid(o)?null:o.p <== Type inference ok\n *\n * Match void\n * @param o type of o should be a union of type containing void\n * @returns true if o is undefined\n */\nfunction matchVoid(o) {\n    return o === undefined;\n}\nexports.matchVoid = matchVoid;\n//# sourceMappingURL=matchVoid.js.map","\"use strict\";\nexports.__esModule = true;\nexports.objectKeys = void 0;\n/** Object.keys() with types */\nfunction objectKeys(o) {\n    return Object.keys(o);\n}\nexports.objectKeys = objectKeys;\n//# sourceMappingURL=objectKeys.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nexports.overwriteReadonlyProp = void 0;\n/**\n * Assign a value to a property even if the object is freezed or if the property is not writable\n * Throw if the assignation fail ( for example if the property is non configurable write: false )\n * */\nexports.overwriteReadonlyProp = function (obj, propertyName, value) {\n    try {\n        obj[propertyName] = value;\n    }\n    catch (_a) {\n    }\n    if (obj[propertyName] === value) {\n        return value;\n    }\n    var errorDefineProperty = undefined;\n    var propertyDescriptor = Object.getOwnPropertyDescriptor(obj, propertyName) || {\n        \"enumerable\": true,\n        \"configurable\": true\n    };\n    if (!!propertyDescriptor.get) {\n        throw new Error(\"Probably a wrong ides to overwrite \" + propertyName + \" getter\");\n    }\n    try {\n        Object.defineProperty(obj, propertyName, __assign(__assign({}, propertyDescriptor), { value: value }));\n    }\n    catch (error) {\n        errorDefineProperty = error;\n    }\n    if (obj[propertyName] !== value) {\n        throw errorDefineProperty || new Error(\"Can't assign\");\n    }\n    return value;\n};\n//# sourceMappingURL=overwriteReadonlyProp.js.map","\"use strict\";\nexports.__esModule = true;\nexports.typeGuard = void 0;\n/**\n * Use cases:\n *\n * 1) When we know the subtype of a variable but the compiler is unaware.\n *\n * declare const x: \"FOO\" | \"BAR\";\n *\n * 1.1) If we want to tel the compile that we know x is of type \"BAR\"\n *\n * assert(typeGuard<\"BAR\">(x));\n * x; <== x is of type \"BAR\"\n *\n * 1.2) If we want to tell the compiler that x is NOT of type \"BAR\"\n *\n * assert(!typeGuard<\"BAR\">(x,false));\n * x; <== x is of type \"FOO\"\n *\n * 2) Tell the compiler what assertion can be made on a given variable\n * if a given test return true.\n *\n * type Circle = { type: \"CIRCLE\"; radius: number; };\n * type Square = { type: \"SQUARE\"; sideLength: number; };\n * type Shape = Circle | Square;\n *\n * declare const shape: Shape;\n *\n * if( typeGuard<Circle>(shape, shape.type === \"CIRCLE\") ){\n *     [ shape is Circle ]\n * }else{\n *     [ shape is not Circle ]\n * }\n *\n *\n * export function matchVoid(o: any): o is void {\n *     return typeGuard<void>(o, o === undefined || o === null );\n * }\n *\n * 3) Helper for safely build other type guards\n *\n * export function match<T>(set: Object): set is SetLike<T> {\n *     return (\n *         typeGuard<SetLike<T>>(set) &&\n *         typeof set.values === \"function\" &&\n *         /Set/.test(Object.getPrototypeOf(set).constructor.name)\n *     );\n * }\n *\n */\nfunction typeGuard(o, isMatched) {\n    if (isMatched === void 0) { isMatched = true; }\n    o; //NOTE: Just to avoid unused variable;\n    return isMatched;\n}\nexports.typeGuard = typeGuard;\n//# sourceMappingURL=typeGuard.js.map","\"use strict\";\nexports.__esModule = true;\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\nif (!Array.prototype.find) {\n    Object.defineProperty(Array.prototype, 'find', {\n        value: function (predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n            var o = Object(this);\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n            // 5. Let k be 0.\n            var k = 0;\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return kValue.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return kValue;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n            // 7. Return undefined.\n            return undefined;\n        },\n        configurable: true,\n        writable: true\n    });\n}\n//# sourceMappingURL=Array.prototype.find.js.map","\"use strict\";\nexports.__esModule = true;\nexports.Polyfill = exports.LightMapImpl = void 0;\nvar LightMapImpl = /** @class */ (function () {\n    function LightMapImpl() {\n        this.record = [];\n    }\n    LightMapImpl.prototype.has = function (key) {\n        return this.record\n            .map(function (_a) {\n            var _key = _a[0];\n            return _key;\n        })\n            .indexOf(key) >= 0;\n    };\n    LightMapImpl.prototype.get = function (key) {\n        var entry = this.record\n            .filter(function (_a) {\n            var _key = _a[0];\n            return _key === key;\n        })[0];\n        if (entry === undefined) {\n            return undefined;\n        }\n        return entry[1];\n    };\n    LightMapImpl.prototype.set = function (key, value) {\n        var entry = this.record\n            .filter(function (_a) {\n            var _key = _a[0];\n            return _key === key;\n        })[0];\n        if (entry === undefined) {\n            this.record.push([key, value]);\n        }\n        else {\n            entry[1] = value;\n        }\n        return this;\n    };\n    LightMapImpl.prototype[\"delete\"] = function (key) {\n        var index = this.record.map(function (_a) {\n            var key = _a[0];\n            return key;\n        }).indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        this.record.splice(index, 1);\n        return true;\n    };\n    LightMapImpl.prototype.keys = function () {\n        return this.record.map(function (_a) {\n            var key = _a[0];\n            return key;\n        });\n    };\n    return LightMapImpl;\n}());\nexports.LightMapImpl = LightMapImpl;\nexports.Polyfill = typeof Map !== \"undefined\" ? Map : LightMapImpl;\n//# sourceMappingURL=Map.js.map","\"use strict\";\nexports.__esModule = true;\nif (!Object.is) {\n    Object.is = function (x, y) {\n        // SameValue algorithm\n        if (x === y) { // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return x !== 0 || 1 / x === 1 / y;\n        }\n        else {\n            // Step 6.a: NaN == NaN\n            return x !== x && y !== y;\n        }\n    };\n}\n//# sourceMappingURL=Object.is.js.map","\"use strict\";\nexports.__esModule = true;\nexports.Polyfill = exports.LightSetImpl = void 0;\nvar Map_1 = require(\"./Map\");\nvar LightSetImpl = /** @class */ (function () {\n    function LightSetImpl(values) {\n        this.map = new Map_1.Polyfill();\n        if (values === undefined) {\n            return;\n        }\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var value = values_1[_i];\n            this.add(value);\n        }\n    }\n    LightSetImpl.prototype.has = function (value) {\n        return this.map.has(value);\n    };\n    LightSetImpl.prototype.add = function (value) {\n        this.map.set(value, true);\n        return this;\n    };\n    LightSetImpl.prototype.values = function () {\n        return this.map.keys();\n    };\n    LightSetImpl.prototype[\"delete\"] = function (value) {\n        return this.map[\"delete\"](value);\n    };\n    return LightSetImpl;\n}());\nexports.LightSetImpl = LightSetImpl;\nexports.Polyfill = typeof Set !== \"undefined\" ? Set : LightSetImpl;\n//# sourceMappingURL=Set.js.map","\"use strict\";\nexports.__esModule = true;\nexports.Polyfill = void 0;\nvar Map_1 = require(\"./Map\");\nexports.Polyfill = typeof WeakMap !== \"undefined\" ? WeakMap : Map_1.Polyfill;\n//# sourceMappingURL=WeakMap.js.map","\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nexports.__esModule = true;\nexports.buildMethodCb = exports.buildCb = exports.getPrComplete = exports.isRunning = exports.cancelAllQueuedCalls = exports.getQueuedCallCount = exports.buildMethod = exports.build = exports.createGroupRef = void 0;\nvar WeakMap_1 = require(\"minimal-polyfills/WeakMap\");\nvar ExecQueue = /** @class */ (function () {\n    function ExecQueue() {\n        this.queuedCalls = [];\n        this.isRunning = false;\n        this.prComplete = Promise.resolve();\n    }\n    //TODO: move where it is used.\n    ExecQueue.prototype.cancelAllQueuedCalls = function () {\n        var n;\n        this.queuedCalls.splice(0, n = this.queuedCalls.length);\n        return n;\n    };\n    return ExecQueue;\n}());\nvar globalContext = {};\nvar clusters = new WeakMap_1.Polyfill();\n//console.log(\"Map version\");\n//export const clusters = new Map<Object, Map<GroupRef,ExecQueue>>();\nfunction getOrCreateExecQueue(context, groupRef) {\n    var execQueueByGroup = clusters.get(context);\n    if (!execQueueByGroup) {\n        execQueueByGroup = new WeakMap_1.Polyfill();\n        clusters.set(context, execQueueByGroup);\n    }\n    var execQueue = execQueueByGroup.get(groupRef);\n    if (!execQueue) {\n        execQueue = new ExecQueue();\n        execQueueByGroup.set(groupRef, execQueue);\n    }\n    return execQueue;\n}\nfunction createGroupRef() {\n    return new Array(0);\n}\nexports.createGroupRef = createGroupRef;\nfunction build() {\n    var inputs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        inputs[_i] = arguments[_i];\n    }\n    switch (inputs.length) {\n        case 1: return buildFnPromise(true, createGroupRef(), inputs[0]);\n        case 2: return buildFnPromise(true, inputs[0], inputs[1]);\n    }\n}\nexports.build = build;\nfunction buildMethod() {\n    var inputs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        inputs[_i] = arguments[_i];\n    }\n    switch (inputs.length) {\n        case 1: return buildFnPromise(false, createGroupRef(), inputs[0]);\n        case 2: return buildFnPromise(false, inputs[0], inputs[1]);\n    }\n}\nexports.buildMethod = buildMethod;\n/**\n *\n * Get the number of queued call of a run-exclusive function.\n * Note that if you call a runExclusive function and call this\n * directly after it will return 0 as there is one function call\n * execution ongoing but 0 queued.\n *\n * The classInstanceObject parameter is to provide only for the run-exclusive\n * function created with 'buildMethod[Cb].\n *\n * */\nfunction getQueuedCallCount(runExclusiveFunction, classInstanceObject) {\n    var execQueue = getExecQueueByFunctionAndContext(runExclusiveFunction, classInstanceObject);\n    return execQueue ? execQueue.queuedCalls.length : 0;\n}\nexports.getQueuedCallCount = getQueuedCallCount;\n/**\n *\n * Cancel all queued calls of a run-exclusive function.\n * Note that the current running call will not be cancelled.\n *\n * The classInstanceObject parameter is to provide only for the run-exclusive\n * function created with 'buildMethod[Cb].\n *\n */\nfunction cancelAllQueuedCalls(runExclusiveFunction, classInstanceObject) {\n    var execQueue = getExecQueueByFunctionAndContext(runExclusiveFunction, classInstanceObject);\n    return execQueue ? execQueue.cancelAllQueuedCalls() : 0;\n}\nexports.cancelAllQueuedCalls = cancelAllQueuedCalls;\n/**\n * Tell if a run-exclusive function has an instance of it's call currently being\n * performed.\n *\n * The classInstanceObject parameter is to provide only for the run-exclusive\n * function created with 'buildMethod[Cb].\n */\nfunction isRunning(runExclusiveFunction, classInstanceObject) {\n    var execQueue = getExecQueueByFunctionAndContext(runExclusiveFunction, classInstanceObject);\n    return execQueue ? execQueue.isRunning : false;\n}\nexports.isRunning = isRunning;\n/**\n * Return a promise that resolve when all the current queued call of a runExclusive functions\n * have completed.\n *\n * The classInstanceObject parameter is to provide only for the run-exclusive\n * function created with 'buildMethod[Cb].\n */\nfunction getPrComplete(runExclusiveFunction, classInstanceObject) {\n    var execQueue = getExecQueueByFunctionAndContext(runExclusiveFunction, classInstanceObject);\n    return execQueue ? execQueue.prComplete : Promise.resolve();\n}\nexports.getPrComplete = getPrComplete;\nvar groupByRunExclusiveFunction = new WeakMap_1.Polyfill();\nfunction getExecQueueByFunctionAndContext(runExclusiveFunction, context) {\n    if (context === void 0) { context = globalContext; }\n    var groupRef = groupByRunExclusiveFunction.get(runExclusiveFunction);\n    if (!groupRef) {\n        throw Error(\"Not a run exclusiveFunction\");\n    }\n    var execQueueByGroup = clusters.get(context);\n    if (!execQueueByGroup) {\n        return undefined;\n    }\n    return execQueueByGroup.get(groupRef);\n}\nfunction buildFnPromise(isGlobal, groupRef, fun) {\n    var execQueue;\n    var runExclusiveFunction = (function () {\n        var _this = this;\n        var inputs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            inputs[_i] = arguments[_i];\n        }\n        if (!isGlobal) {\n            if (!(this instanceof Object)) {\n                throw new Error(\"Run exclusive, <this> should be an object\");\n            }\n            execQueue = getOrCreateExecQueue(this, groupRef);\n        }\n        return new Promise(function (resolve, reject) {\n            var onPrCompleteResolve;\n            execQueue.prComplete = new Promise(function (resolve) {\n                return onPrCompleteResolve = function () { return resolve(); };\n            });\n            var onComplete = function (result) {\n                onPrCompleteResolve();\n                execQueue.isRunning = false;\n                if (execQueue.queuedCalls.length) {\n                    execQueue.queuedCalls.shift()();\n                }\n                if (\"data\" in result) {\n                    resolve(result.data);\n                }\n                else {\n                    reject(result.reason);\n                }\n            };\n            (function callee() {\n                var _this = this;\n                var inputs = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    inputs[_i] = arguments[_i];\n                }\n                if (execQueue.isRunning) {\n                    execQueue.queuedCalls.push(function () { return callee.apply(_this, inputs); });\n                    return;\n                }\n                execQueue.isRunning = true;\n                try {\n                    fun.apply(this, inputs)\n                        .then(function (data) { return onComplete({ data: data }); })[\"catch\"](function (reason) { return onComplete({ reason: reason }); });\n                }\n                catch (error) {\n                    onComplete({ \"reason\": error });\n                }\n            }).apply(_this, inputs);\n        });\n    });\n    if (isGlobal) {\n        execQueue = getOrCreateExecQueue(globalContext, groupRef);\n    }\n    groupByRunExclusiveFunction.set(runExclusiveFunction, groupRef);\n    return runExclusiveFunction;\n}\nfunction buildCb() {\n    var inputs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        inputs[_i] = arguments[_i];\n    }\n    switch (inputs.length) {\n        case 1: return buildFnCallback(true, createGroupRef(), inputs[0]);\n        case 2: return buildFnCallback(true, inputs[0], inputs[1]);\n    }\n}\nexports.buildCb = buildCb;\nfunction buildMethodCb() {\n    var inputs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        inputs[_i] = arguments[_i];\n    }\n    switch (inputs.length) {\n        case 1: return buildFnCallback(false, createGroupRef(), inputs[0]);\n        case 2: return buildFnCallback(false, inputs[0], inputs[1]);\n    }\n}\nexports.buildMethodCb = buildMethodCb;\nfunction buildFnCallback(isGlobal, groupRef, fun) {\n    var execQueue;\n    var runExclusiveFunction = (function () {\n        var _this = this;\n        var inputs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            inputs[_i] = arguments[_i];\n        }\n        if (!isGlobal) {\n            if (!(this instanceof Object)) {\n                throw new Error(\"Run exclusive, <this> should be an object\");\n            }\n            execQueue = getOrCreateExecQueue(this, groupRef);\n        }\n        var callback = undefined;\n        if (inputs.length && typeof inputs[inputs.length - 1] === \"function\") {\n            callback = inputs.pop();\n        }\n        var onPrCompleteResolve;\n        execQueue.prComplete = new Promise(function (resolve) {\n            return onPrCompleteResolve = function () { return resolve(); };\n        });\n        var onComplete = function () {\n            var inputs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                inputs[_i] = arguments[_i];\n            }\n            onPrCompleteResolve();\n            execQueue.isRunning = false;\n            if (execQueue.queuedCalls.length) {\n                execQueue.queuedCalls.shift()();\n            }\n            if (callback) {\n                callback.apply(_this, inputs);\n            }\n        };\n        onComplete.hasCallback = !!callback;\n        (function callee() {\n            var _this = this;\n            var inputs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                inputs[_i] = arguments[_i];\n            }\n            if (execQueue.isRunning) {\n                execQueue.queuedCalls.push(function () { return callee.apply(_this, inputs); });\n                return;\n            }\n            execQueue.isRunning = true;\n            try {\n                fun.apply(this, __spreadArrays(inputs, [onComplete]));\n            }\n            catch (error) {\n                error.message += \" ( This exception should not have been thrown, miss use of run-exclusive buildCb )\";\n                throw error;\n            }\n        }).apply(this, inputs);\n    });\n    if (isGlobal) {\n        execQueue = getOrCreateExecQueue(globalContext, groupRef);\n    }\n    groupByRunExclusiveFunction.set(runExclusiveFunction, groupRef);\n    return runExclusiveFunction;\n}\n//# sourceMappingURL=runExclusive.js.map"]}