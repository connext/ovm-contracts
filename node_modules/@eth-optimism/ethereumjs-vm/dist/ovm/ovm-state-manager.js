"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OvmStateManager = void 0;
/* External Imports */
var BN = require("bn.js");
var buffer_utils_1 = require("./utils/buffer-utils");
var constants_1 = require("./utils/constants");
var OvmStateManager = /** @class */ (function () {
    function OvmStateManager(opts) {
        this.vm = opts.vm;
        this._iface = this.vm.contracts.OVM_StateManager.iface;
        this._handlers = {
            hasAccount: this.hasAccount.bind(this),
            hasEmptyAccount: this.hasEmptyAccount.bind(this),
            setAccountNonce: this.setAccountNonce.bind(this),
            getAccountNonce: this.getAccountNonce.bind(this),
            getAccountEthAddress: this.getAccountEthAddress.bind(this),
            getContractStorage: this.getContractStorage.bind(this),
            hasContractStorage: this.hasContractStorage.bind(this),
            putContractStorage: this.putContractStorage.bind(this),
            testAndSetAccountLoaded: this.testAndSetAccountLoaded.bind(this),
            testAndSetAccountChanged: this.testAndSetAccountChanged.bind(this),
            testAndSetContractStorageLoaded: this.testAndSetContractStorageLoaded.bind(this),
            testAndSetContractStorageChanged: this.testAndSetContractStorageChanged.bind(this),
            isAuthenticated: this.isAuthenticated.bind(this),
        };
    }
    OvmStateManager.prototype.isAuthenticated = function (message, context) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, true];
            });
        });
    };
    OvmStateManager.prototype.handleCall = function (message, context) {
        return __awaiter(this, void 0, void 0, function () {
            var methodId, fragment, functionArgs, ret, encodedRet;
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        methodId = '0x' + message.data.slice(0, 4).toString('hex');
                        fragment = this._iface.getFunction(methodId);
                        functionArgs = this._iface.decodeFunctionData(fragment, buffer_utils_1.toHexString(message.data));
                        if (!(fragment.name in this._handlers)) return [3 /*break*/, 2];
                        return [4 /*yield*/, (_a = this._handlers)[fragment.name].apply(_a, functionArgs)];
                    case 1:
                        ret = _b.sent();
                        ret = ret === null || ret === undefined ? ret : [ret];
                        _b.label = 2;
                    case 2:
                        try {
                            encodedRet = this._iface.encodeFunctionResult(fragment, ret);
                            return [2 /*return*/, buffer_utils_1.fromHexString(encodedRet)];
                        }
                        catch (err) {
                            console.log("Caught encoding error in ovmStateManager: " + err);
                            throw err;
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    OvmStateManager.prototype.hasAccount = function (address) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, true];
            });
        });
    };
    OvmStateManager.prototype.hasEmptyAccount = function (address) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, true];
            });
        });
    };
    OvmStateManager.prototype.setAccountNonce = function (address, nonce) {
        return __awaiter(this, void 0, void 0, function () {
            var account;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.vm.pStateManager.getAccount(buffer_utils_1.fromHexString(address))];
                    case 1:
                        account = _a.sent();
                        account.nonce = new BN(nonce.toNumber()).toArrayLike(Buffer);
                        return [2 /*return*/, this.vm.pStateManager.putAccount(buffer_utils_1.fromHexString(address), account)];
                }
            });
        });
    };
    OvmStateManager.prototype.getAccountNonce = function (address) {
        return __awaiter(this, void 0, void 0, function () {
            var account;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.vm.pStateManager.getAccount(buffer_utils_1.fromHexString(address))];
                    case 1:
                        account = _a.sent();
                        return [2 /*return*/, new BN(account.nonce).toNumber()];
                }
            });
        });
    };
    OvmStateManager.prototype.getAccountEthAddress = function (address) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, address];
            });
        });
    };
    OvmStateManager.prototype.getContractStorage = function (address, key) {
        return __awaiter(this, void 0, void 0, function () {
            var ret;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.vm.pStateManager.getContractStorage(buffer_utils_1.fromHexString(address), buffer_utils_1.fromHexString(key))];
                    case 1:
                        ret = _a.sent();
                        return [2 /*return*/, ret.length ? buffer_utils_1.toHexString(ret) : constants_1.NULL_BYTES32];
                }
            });
        });
    };
    OvmStateManager.prototype.hasContractStorage = function (address, key) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, true];
            });
        });
    };
    OvmStateManager.prototype.putContractStorage = function (address, key, value) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.vm.pStateManager.putContractStorage(buffer_utils_1.fromHexString(address), buffer_utils_1.fromHexString(key), buffer_utils_1.fromHexString(value))];
            });
        });
    };
    OvmStateManager.prototype.testAndSetAccountLoaded = function (address) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, true];
            });
        });
    };
    OvmStateManager.prototype.testAndSetAccountChanged = function (address) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, true];
            });
        });
    };
    OvmStateManager.prototype.testAndSetContractStorageLoaded = function (address, key) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, true];
            });
        });
    };
    OvmStateManager.prototype.testAndSetContractStorageChanged = function (address, key) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, true];
            });
        });
    };
    return OvmStateManager;
}());
exports.OvmStateManager = OvmStateManager;
//# sourceMappingURL=ovm-state-manager.js.map