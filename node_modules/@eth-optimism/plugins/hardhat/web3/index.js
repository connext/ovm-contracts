"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* Imports: External */
const config_1 = require("hardhat/config");
const task_names_1 = require("hardhat/builtin-tasks/task-names");
const web3_provider_adapter_1 = require("@nomiclabs/hardhat-web3/dist/src/web3-provider-adapter");
const provider_1 = require("../internal/provider");
config_1.task(task_names_1.TASK_TEST_SETUP_TEST_ENVIRONMENT, async (args, hre, runSuper) => {
    // Exit quickly if we're not using Web3 or not running against the OVM.
    if (!hre.ovm || !hre.web3) {
        return runSuper(args);
    }
    // Replace the normal hardhat provider with our L2 provider and replace the existing web3
    // object with a wrapper around the L2 provider.
    const Web3 = require('web3');
    hre.l2provider = hre.l2provider || provider_1.makeL2Provider(hre);
    hre.network.provider = hre.l2provider;
    hre.web3 = new Web3(new web3_provider_adapter_1.Web3HTTPProviderAdapter(hre.l2provider));
    // Patch the require function to point to OVM files.
    const _req = hre.artifacts.require;
    const req = (name) => {
        // Need an extra `.ovm` because require strips out everything after the last period.
        return _req(name + '.ovm.ovm');
    };
    hre.artifacts.require = req;
    // Patch the read artifact function, also to point to OVM files.
    const _read = hre.artifacts.readArtifact.bind(hre.artifacts);
    const read = (name) => {
        // No need to include an extra `.ovm` within this function.
        return _read(name + '.ovm');
    };
    hre.artifacts.readArtifact = read;
    // Finish off by running the parent function.
    return runSuper(args);
});
//# sourceMappingURL=index.js.map