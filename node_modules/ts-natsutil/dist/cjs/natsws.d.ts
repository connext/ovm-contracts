import { ILogger, INatsService, INatsSubscription } from '.';
export declare class NatsWebsocketService implements INatsService {
    private bearerToken;
    private config;
    private connection?;
    private log?;
    private pubCount;
    private servers;
    private subscriptions;
    private token?;
    constructor(log?: ILogger, servers?: string[], bearerToken?: string | undefined | null, token?: string | undefined | null);
    connect(): Promise<any>;
    disconnect(): Promise<void>;
    getSubscribedSubjects(): string[];
    isConnected(): boolean;
    publish(subject: string, payload: any, reply?: string): Promise<void>;
    publishCount(): number;
    request(subject: string, timeout: number, data?: any): Promise<any>;
    subscribe(subject: string, callback: (msg: any, err?: any) => void): Promise<INatsSubscription>;
    unsubscribe(subject: string): Promise<void>;
    flush(): Promise<void>;
    private assertConnected;
}
//# sourceMappingURL=natsws.d.ts.map