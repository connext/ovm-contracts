"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Config {
    constructor() {
        this.natsClientPrefix = process.env.NATS_CLIENT_PREFIX || 'ts-natsutil';
        this.natsClusterId = process.env.NATS_CLUSTER_ID;
        this.natsDeadLetterSubject = process.env.NATS_DEADLETTER_SUBJECT || 'nats.deadletter';
        this.natsEncoding = (process.env.NATS_BUFFER_ENCODING || 'utf-8');
        this.natsJson = process.env.NATS_JSON === 'true';
        this.natsMaxPingOut = process.env.NATS_MAX_UNACKED_PINGS ? parseInt(process.env.NATS_MAX_UNACKED_PINGS, 10) : 3;
        this.natsNoEcho = process.env.NATS_NO_ECHO === 'true';
        this.natsPedantic = process.env.NATS_PEDANTIC === 'true';
        this.natsPingInterval = (process.env.NATS_PING_INTERVAL ? parseInt(process.env.NATS_PING_INTERVAL, 10) : 30) * 1000;
        this.natsServers = process.env.NATS_SERVERS;
        this.natsTlsConfigured = !!process.env.NATS_TLS_KEY && !!process.env.NATS_TLS_CERTIFICATE && !!process.env.NATS_CA_CERTIFICATE;
        this.natsTlsOptions = this.natsTlsConfigured ? {
            rejectUnauthorized: !(process.env.NATS_FORCE_TLS === 'true'),
        } : undefined;
        this.natsToken = process.env.NATS_TOKEN;
        this.natsVerbose = process.env.NATS_VERBOSE === 'true';
        this.natsWebsocketEndpoints = process.env.NATS_WEBSOCKET_ENDPOINTS;
    }
    static camelize(str, sep) {
        const split = str.split(sep);
        return split.reduce((acc, curr, i) => {
            if (i === 0) {
                return curr.toLowerCase();
            }
            return (acc + curr.charAt(0).toUpperCase() + curr.slice(1).toLowerCase());
        }, '');
    }
    static fromEnv(overrides) {
        const instance = new Config();
        for (const [k, v] of Object.entries(process.env)) {
            if (v !== undefined) {
                instance[Config.camelize(k, '_')] = v;
            }
        }
        Object.keys(overrides || {}).forEach((key) => {
            instance[key] = overrides[key];
        });
        return instance;
    }
}
exports.Config = Config;
//# sourceMappingURL=env.js.map