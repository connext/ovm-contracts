/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IChannelFactoryInterface extends ethers.utils.Interface {
  functions: {
    "createChannel(address,address)": FunctionFragment;
    "createChannelAndDepositAlice(address,address,address,uint256)": FunctionFragment;
    "getChainId()": FunctionFragment;
    "getChannelAddress(address,address)": FunctionFragment;
    "getMastercopy()": FunctionFragment;
    "getProxyCreationCode()": FunctionFragment;
    "getStoredChainId()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "createChannel",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "createChannelAndDepositAlice",
    values: [string, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getChainId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getChannelAddress",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getMastercopy",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProxyCreationCode",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getStoredChainId",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "createChannel",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createChannelAndDepositAlice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getChainId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getChannelAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMastercopy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProxyCreationCode",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStoredChainId",
    data: BytesLike
  ): Result;

  events: {
    "ChannelCreation(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ChannelCreation"): EventFragment;
}

export class IChannelFactory extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IChannelFactoryInterface;

  functions: {
    createChannel(
      alice: string,
      bob: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createChannel(address,address)"(
      alice: string,
      bob: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    createChannelAndDepositAlice(
      alice: string,
      bob: string,
      assetId: string,
      amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "createChannelAndDepositAlice(address,address,address,uint256)"(
      alice: string,
      bob: string,
      assetId: string,
      amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    getChainId(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getChainId()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getChannelAddress(
      alice: string,
      bob: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getChannelAddress(address,address)"(
      alice: string,
      bob: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getMastercopy(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getMastercopy()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getProxyCreationCode(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getProxyCreationCode()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getStoredChainId(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getStoredChainId()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;
  };

  createChannel(
    alice: string,
    bob: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createChannel(address,address)"(
    alice: string,
    bob: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  createChannelAndDepositAlice(
    alice: string,
    bob: string,
    assetId: string,
    amount: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "createChannelAndDepositAlice(address,address,address,uint256)"(
    alice: string,
    bob: string,
    assetId: string,
    amount: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  getChainId(overrides?: CallOverrides): Promise<BigNumber>;

  "getChainId()"(overrides?: CallOverrides): Promise<BigNumber>;

  getChannelAddress(
    alice: string,
    bob: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "getChannelAddress(address,address)"(
    alice: string,
    bob: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getMastercopy(overrides?: CallOverrides): Promise<string>;

  "getMastercopy()"(overrides?: CallOverrides): Promise<string>;

  getProxyCreationCode(overrides?: CallOverrides): Promise<string>;

  "getProxyCreationCode()"(overrides?: CallOverrides): Promise<string>;

  getStoredChainId(overrides?: CallOverrides): Promise<BigNumber>;

  "getStoredChainId()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    createChannel(
      alice: string,
      bob: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "createChannel(address,address)"(
      alice: string,
      bob: string,
      overrides?: CallOverrides
    ): Promise<string>;

    createChannelAndDepositAlice(
      alice: string,
      bob: string,
      assetId: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "createChannelAndDepositAlice(address,address,address,uint256)"(
      alice: string,
      bob: string,
      assetId: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getChainId(overrides?: CallOverrides): Promise<BigNumber>;

    "getChainId()"(overrides?: CallOverrides): Promise<BigNumber>;

    getChannelAddress(
      alice: string,
      bob: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "getChannelAddress(address,address)"(
      alice: string,
      bob: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getMastercopy(overrides?: CallOverrides): Promise<string>;

    "getMastercopy()"(overrides?: CallOverrides): Promise<string>;

    getProxyCreationCode(overrides?: CallOverrides): Promise<string>;

    "getProxyCreationCode()"(overrides?: CallOverrides): Promise<string>;

    getStoredChainId(overrides?: CallOverrides): Promise<BigNumber>;

    "getStoredChainId()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {
    ChannelCreation(channel: null): EventFilter;
  };

  estimateGas: {
    createChannel(
      alice: string,
      bob: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createChannel(address,address)"(
      alice: string,
      bob: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    createChannelAndDepositAlice(
      alice: string,
      bob: string,
      assetId: string,
      amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "createChannelAndDepositAlice(address,address,address,uint256)"(
      alice: string,
      bob: string,
      assetId: string,
      amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    getChainId(overrides?: CallOverrides): Promise<BigNumber>;

    "getChainId()"(overrides?: CallOverrides): Promise<BigNumber>;

    getChannelAddress(
      alice: string,
      bob: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getChannelAddress(address,address)"(
      alice: string,
      bob: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMastercopy(overrides?: CallOverrides): Promise<BigNumber>;

    "getMastercopy()"(overrides?: CallOverrides): Promise<BigNumber>;

    getProxyCreationCode(overrides?: CallOverrides): Promise<BigNumber>;

    "getProxyCreationCode()"(overrides?: CallOverrides): Promise<BigNumber>;

    getStoredChainId(overrides?: CallOverrides): Promise<BigNumber>;

    "getStoredChainId()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    createChannel(
      alice: string,
      bob: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createChannel(address,address)"(
      alice: string,
      bob: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    createChannelAndDepositAlice(
      alice: string,
      bob: string,
      assetId: string,
      amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "createChannelAndDepositAlice(address,address,address,uint256)"(
      alice: string,
      bob: string,
      assetId: string,
      amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    getChainId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getChainId()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getChannelAddress(
      alice: string,
      bob: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getChannelAddress(address,address)"(
      alice: string,
      bob: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMastercopy(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getMastercopy()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getProxyCreationCode(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getProxyCreationCode()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getStoredChainId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getStoredChainId()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
