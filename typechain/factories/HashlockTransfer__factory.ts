/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { HashlockTransfer } from "../HashlockTransfer";

export class HashlockTransfer__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<HashlockTransfer> {
    return super.deploy(overrides || {}) as Promise<HashlockTransfer>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HashlockTransfer {
    return super.attach(address) as HashlockTransfer;
  }
  connect(signer: Signer): HashlockTransfer__factory {
    return super.connect(signer) as HashlockTransfer__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HashlockTransfer {
    return new Contract(address, _abi, signerOrProvider) as HashlockTransfer;
  }
}

const _abi = [
  {
    inputs: [],
    name: "EncodedCancel",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "Name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ResolverEncoding",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "StateEncoding",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedBalance",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "encodedState",
        type: "bytes",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegistryInformation",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "definition",
            type: "address",
          },
          {
            internalType: "string",
            name: "stateEncoding",
            type: "string",
          },
          {
            internalType: "string",
            name: "resolverEncoding",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "encodedCancel",
            type: "bytes",
          },
        ],
        internalType: "struct RegisteredTransfer",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedBalance",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "encodedState",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "encodedResolver",
        type: "bytes",
      },
    ],
    name: "resolve",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[2]",
            name: "amount",
            type: "uint256[2]",
          },
          {
            internalType: "address payable[2]",
            name: "to",
            type: "address[2]",
          },
        ],
        internalType: "struct Balance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610dce806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638052474d1161005b5780638052474d146100bd5780638de8b77e146100c55780638ef98a7e146100cd57806394184ba9146100ed5761007d565b80630528aa1c14610082578063206162be146100a05780633722aff9146100b5575b600080fd5b61008a61010d565b6040516100979190610a7f565b60405180910390f35b6100a8610141565b6040516100979190610c83565b61008a61034d565b61008a610386565b61008a6103b2565b6100e06100db366004610834565b6103ce565b6040516100979190610c23565b6101006100fb3660046107cb565b61050e565b6040516100979190610a6b565b60606101176105da565b6000815260405161012c908290602001610d13565b60405160208183030381529060405291505090565b6101496105ec565b6040518060a00160405280306001600160a01b0316638052474d6040518163ffffffff1660e01b815260040160006040518083038186803b15801561018d57600080fd5b505afa1580156101a1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101c991908101906108ca565b8152602001306001600160a01b03168152602001306001600160a01b0316638de8b77e6040518163ffffffff1660e01b815260040160006040518083038186803b15801561021657600080fd5b505afa15801561022a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261025291908101906108ca565b8152602001306001600160a01b0316633722aff96040518163ffffffff1660e01b815260040160006040518083038186803b15801561029057600080fd5b505afa1580156102a4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102cc91908101906108ca565b8152602001306001600160a01b0316630528aa1c6040518163ffffffff1660e01b815260040160006040518083038186803b15801561030a57600080fd5b505afa15801561031e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261034691908101906108ca565b9052905090565b6040518060400160405280601781526020017f7475706c65286279746573333220707265496d6167652900000000000000000081525081565b6040518060400160405280601081526020016f2430b9b43637b1b5aa3930b739b332b960811b81525081565b604051806060016040528060278152602001610d726027913981565b6103d6610624565b6103de610649565b6103ea858701876109db565b90506103f46105da565b610400848601866109a0565b905061040a610624565b610416898b018b610905565b82519091501561050157602083015115806104345750428360200151115b6104595760405162461bcd60e51b815260040161045090610bad565b60405180910390fd5b6000600283600001516040516020016104729190610a76565b60408051601f198184030181529082905261048c91610a4f565b602060405180830381855afa1580156104a9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906104cc91906107b3565b845190915081146104ef5760405162461bcd60e51b815260040161045090610ae4565b50805180516020909101528051600090525b9998505050505050505050565b6000610518610649565b610524838501856109db565b905061052e610624565b61053a86880188610905565b80515190915061055c5760405162461bcd60e51b815260040161045090610b26565b8051602001511561057f5760405162461bcd60e51b815260040161045090610a99565b815161059d5760405162461bcd60e51b815260040161045090610bee565b602082015115806105b15750428260200151115b6105cd5760405162461bcd60e51b815260040161045090610b6b565b5060019695505050505050565b60408051602081019091526000815290565b6040518060a001604052806060815260200160006001600160a01b031681526020016060815260200160608152602001606081525090565b6040518060400160405280610637610660565b8152602001610644610660565b905290565b604080518082019091526000808252602082015290565b60405180604001604052806002906020820280368337509192915050565b600082601f83011261068e578081fd5b6040516040810181811067ffffffffffffffff821117156106ab57fe5b806040525080915082846040850111156106c457600080fd5b6000805b60028110156106fc5782356001600160a01b03811681146106e7578283fd5b845260209384019392909201916001016106c8565b5050505092915050565b60008083601f840112610717578182fd5b50813567ffffffffffffffff81111561072e578182fd5b60208301915083602082850101111561074657600080fd5b9250929050565b600082601f83011261075d578081fd5b815167ffffffffffffffff81111561077157fe5b610784601f8201601f1916602001610d1d565b915080825283602082850101111561079b57600080fd5b6107ac816020840160208601610d41565b5092915050565b6000602082840312156107c4578081fd5b5051919050565b600080600080604085870312156107e0578283fd5b843567ffffffffffffffff808211156107f7578485fd5b61080388838901610706565b9096509450602087013591508082111561081b578384fd5b5061082887828801610706565b95989497509550505050565b6000806000806000806060878903121561084c578182fd5b863567ffffffffffffffff80821115610863578384fd5b61086f8a838b01610706565b90985096506020890135915080821115610887578384fd5b6108938a838b01610706565b909650945060408901359150808211156108ab578384fd5b506108b889828a01610706565b979a9699509497509295939492505050565b6000602082840312156108db578081fd5b815167ffffffffffffffff8111156108f1578182fd5b6108fd8482850161074d565b949350505050565b600060808284031215610916578081fd5b6040516040810181811067ffffffffffffffff8211171561093357fe5b604052601f83018413610944578182fd5b61094e6040610d1d565b80846040860187811115610960578586fd5b855b6002811015610981578235855260209485019490920191600101610962565b5082855261098f888261067e565b602086015250929695505050505050565b6000602082840312156109b1578081fd5b6040516020810181811067ffffffffffffffff821117156109ce57fe5b6040529135825250919050565b6000604082840312156109ec578081fd5b6040516040810181811067ffffffffffffffff82111715610a0957fe5b604052823581526020928301359281019290925250919050565b60008151808452610a3b816020860160208601610d41565b601f01601f19169290920160200192915050565b60008251610a61818460208701610d41565b9190910192915050565b901515815260200190565b90815260200190565b600060208252610a926020830184610a23565b9392505050565b6020808252602b908201527f486173686c6f636b5472616e736665723a204e4f4e5a45524f5f52454349504960408201526a454e545f42414c414e434560a81b606082015260800190565b60208082526022908201527f486173686c6f636b5472616e736665723a20494e56414c49445f505245494d41604082015261474560f01b606082015260800190565b60208082526025908201527f486173686c6f636b5472616e736665723a205a4552305f53454e4445525f42416040820152644c414e434560d81b606082015260800190565b60208082526022908201527f486173686c6f636b5472616e736665723a20455850495245445f54494d454c4f604082015261434b60f01b606082015260800190565b60208082526021908201527f486173686c6f636b5472616e736665723a205041594d454e545f4558504952456040820152601160fa1b606082015260800190565b6020808252818101527f486173686c6f636b5472616e736665723a20454d5054595f4c4f434b48415348604082015260600190565b815160808201908260005b6002811015610c4d578251825260209283019290910190600101610c2e565b5050506020808401516040840160005b60028110156106fc5782516001600160a01b031682529183019190830190600101610c5d565b600060208252825160a06020840152610c9f60c0840182610a23565b905060018060a01b0360208501511660408401526040840151601f1980858403016060860152610ccf8383610a23565b92506060860151915080858403016080860152610cec8383610a23565b925060808601519150808584030160a086015250610d0a8282610a23565b95945050505050565b9051815260200190565b60405181810167ffffffffffffffff81118282101715610d3957fe5b604052919050565b60005b83811015610d5c578181015183820152602001610d44565b83811115610d6b576000848401525b5050505056fe7475706c652862797465733332206c6f636b486173682c2075696e743235362065787069727929a2646970667358221220d8b9b5d2320a1e8b657dd524919c8758af7d0033ec818b9f112c9524595c522364736f6c63430007030033";
